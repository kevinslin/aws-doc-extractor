# Query: Note
# Flags: IgnoreExcludeSettings
# Including: build/**/*.md
# ContextLines: 1

154 results - 102 files

aws-doc-extractor • build/doc_source/agent-update-classic-console.md:
  6      ],
  7:     "content": "**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.",
  8      "header": "Updating the Amazon ECS container agent with the classic console<a name=\"agent-update-classic-console\"></a>"

aws-doc-extractor • build/doc_source/agent-update-console.md:
  6      ],
  7:     "content": "**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.",
  8      "header": "Updating the Amazon ECS container agent with the console<a name=\"agent-update-console\"></a>"

aws-doc-extractor • build/doc_source/agent-update-ecs-ami.md:
   6      ],
   7:     "content": "**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.<a name=\"procedure_update_ecs-init\"></a>",
   8      "header": "Updating the Amazon ECS container agent on an Amazon ECS\\-optimized AMI<a name=\"agent-update-ecs-ami\"></a>"

  14      ],
  15:     "content": "**Note**  \nThe `ecs-init` package and the Amazon ECS container agent are updated immediately\\. However, newer versions of Docker are not loaded until the Docker daemon is restarted\\. Restart either by rebooting the instance, or by running the following commands on your instance:  \nAmazon ECS\\-optimized Amazon Linux 2 AMI:",
  16      "header": "Updating the Amazon ECS container agent on an Amazon ECS\\-optimized AMI<a name=\"agent-update-ecs-ami\"></a>"

  22      ],
  23:     "content": "**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.",
  24      "header": "Updating the Amazon ECS container agent with the `UpdateContainerAgent` API operation<a name=\"agent-update-api\"></a>"

aws-doc-extractor • build/doc_source/api_failures_messages.md:
  6      ],
  7:     "content": "**Note**  \nBesides the failure scenarios described here, APIs can also fail due to exceptions, resulting in error responses\\. For a list of such exceptions, see [Common Errors](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/CommonErrors.html)\\.",
  8      "header": "API failure reasons<a name=\"api_failures_messages\"></a>"

aws-doc-extractor • build/doc_source/application-metrics-cloudwatch.md:
  6      ],
  7:     "content": "**Note**  \nIf your application requires any additional permissions, you should add them to this policy\\. Each task definition may only specify one task IAM role\\. For example, if you are using a custom configuration file stored in Systems Manager, you should add the `ssm:GetParameters` permission to this IAM policy\\.",
  8      "header": "Required IAM permissions for AWS Distro for OpenTelemetry integration with Amazon CloudWatch<a name=\"application-metrics-cloudwatch-iam\"></a>"

aws-doc-extractor • build/doc_source/asg-capacity-providers-create-auto-scaling-group.md:
  6      ],
  7:     "content": "**Note**  \nWhen using the Amazon ECS console **Create Cluster** wizard with the **EC2 Linux \\+ Networking** option, Amazon ECS creates an Amazon EC2 Auto Scaling launch configuration and Auto Scaling group on your behalf as part of the AWS CloudFormation stack\\. They are prefixed with `EC2ContainerService-<ClusterName>`, which makes them easy to identify\\. That Auto Scaling group could then be used in a capacity provider for that cluster\\.  \nFor more information on replacing an Auto Scaling launch configuration with an Amazon EC2 launch template, see [Replacing a launch configuration with a launch template](https://docs.aws.amazon.com/autoscaling/ec2/userguide/replace-launch-config.html) in the *Amazon EC2 Auto Scaling User Guide*",
  8      "header": "Creating an Auto Scaling group<a name=\"asg-capacity-providers-create-auto-scaling-group\"></a>"

aws-doc-extractor • build/doc_source/asg-capacity-providers-delete-capacity-provider.md:
  6      ],
  7:     "content": "**Note**  \nOnly capacity providers that are currently associated with a cluster are visible in the AWS Management Console\\. To delete a capacity provider that is not associated with a cluster, you must use the Amazon ECS API, SDK, or AWS CLI\\.",
  8      "header": "To delete an Auto Scaling group capacity provider \\(classic AWS Management Console\\)<a name=\"delete-capacity-provider-console\"></a>"

aws-doc-extractor • build/doc_source/automated_image_cleanup.md:
   6      ],
   7:     "content": "**Note**  \nThe Amazon ECS agent image pull behavior can be customized using the `ECS_IMAGE_PULL_BEHAVIOR` parameter\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\.",
   8      "header": "Automated task and image cleanup<a name=\"automated_image_cleanup\"></a>"

  14      ],
  15:     "content": "**Note**  \nThe automated image cleanup feature requires at least version 1\\.13\\.0 of the Amazon ECS container agent\\. To update your agent to the latest version, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\.",
  16      "header": "Automated task and image cleanup<a name=\"automated_image_cleanup\"></a>"

aws-doc-extractor • build/doc_source/AWS_Copilot.md:
  6      ],
  7:     "content": "**Note**  \nThe source code for the AWS Copilot CLI is available on [GitHub](https://github.com/aws/copilot-cli)\\. The latest CLI documentation is available on the AWS Copilot [website](https://aws.github.io/copilot-cli/)\\. We recommend that you submit issues and pull requests for changes that you would like to have included\\. However, Amazon Web Services doesn't currently support running modified copies of AWS Copilot code\\. Report issues with AWS Copilot by connecting with us on [Gitter](https://gitter.im/aws/copilot-cli) or [GitHub](https://github.com/aws/copilot-cli) where you can open issues, provide feedback, and report bugs\\.",
  8      "header": "Using the AWS Copilot command line interface<a name=\"AWS_Copilot\"></a>"

aws-doc-extractor • build/doc_source/basic-service-params.md:
  6      ],
  7:     "content": "**Note**  \nIf your cluster is configured with a default capacity provider strategy, you can only create a service using the default capacity provider strategy when using the console\\. Likewise, if no default capacity provider is defined, you can only use a launch type when creating a service using the console\\. It's not currently possible to have a mixed strategy using both capacity providers and launch types in the console\\.",
  8      "header": "Step 1: Configuring basic service parameters<a name=\"basic-service-params\"></a>"

aws-doc-extractor • build/doc_source/bootstrap_windows_container_instance.md:
  6      ],
  7:     "content": "**Note**  \nThis script is shared for example purposes\\. It is much easier to get started with Windows containers by using the Amazon ECS\\-optimized Windows Server AMI\\. For more information, see [Creating a cluster using the classic console](create_cluster.md)\\.",
  8      "header": "Windows agent installation user data<a name=\"agent-service-userdata\"></a>"

aws-doc-extractor • build/doc_source/cloudwatch_alarm_autoscaling.md:
  6      ],
  7:     "content": "**Note**  \nIn December 2019, Amazon ECS launched cluster auto scaling, as an alternative method for scaling container instances\\. For more information, see [Amazon ECS cluster Auto Scaling](cluster-auto-scaling.md)\\.",
  8      "header": "Tutorial: Scaling container instances with CloudWatch alarms<a name=\"cloudwatch_alarm_autoscaling\"></a>"

aws-doc-extractor • build/doc_source/cloudwatch-metrics.md:
   6      ],
   7:     "content": "**Note**  \nYou can disable CloudWatch metrics collection by setting `ECS_DISABLE_METRICS=true` in your Amazon ECS container agent configuration\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\.",
   8      "header": "Using CloudWatch metrics<a name=\"enable_cloudwatch\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf you're using tasks with the EC2 launch type and have Linux container instances, the Amazon ECS container agent relies on Docker `stats` metrics to gather CPU and memory data for each container running on the instance\\. For burstable performance instances \\(T3, T3a, and T2 instances\\), the CPU utilization metric may reflect different data compared to instance\\-level CPU metrics\\.",
  16      "header": "Amazon ECS metrics<a name=\"ecs-metrics\"></a>"

  22      ],
  23:     "content": "**Note**  \nIn this example, the CPU utilization will only go above 100% when the CPU units are defined at the container level\\. If you define CPU units at the task level, the utilization will not go above the defined task\\-level limit\\.",
  24      "header": "Service utilization<a name=\"service_utilization\"></a>"

aws-doc-extractor • build/doc_source/cluster-auto-scaling.md:
  6      ],
  7:     "content": "**Note**  \nAmazon ECS cluster auto scaling is only supported with Auto Scaling group capacity providers\\. For Amazon ECS workloads that are hosted on AWS Fargate, see [AWS Fargate capacity providers](fargate-capacity-providers.md)\\.",
  8      "header": "Amazon ECS cluster Auto Scaling<a name=\"cluster-auto-scaling\"></a>"

aws-doc-extractor • build/doc_source/cluster-query-language.md:
  6      ],
  7:     "content": "**Note**  \nA single expression can't contain parentheses\\. However, parentheses can be used to specify precedence in compound expressions\\.",
  8      "header": "Expression syntax<a name=\"expression-syntax\"></a>"

aws-doc-extractor • build/doc_source/codedeploy_IAM_role.md:
  6      ],
  7:     "content": "**Note**  \nUsers also require permissions to use CodeDeploy; these permissions are described in [Blue/green deployment required IAM permissions](deployment-type-bluegreen.md#deployment-type-bluegreen-IAM)\\.",
  8      "header": "Amazon ECS CodeDeploy IAM Role<a name=\"codedeploy_IAM_role\"></a>"

aws-doc-extractor • build/doc_source/container-instance-eni.md:
  6      ],
  7:     "content": "**Note**  \nThis feature is not available on Fargate\\.",
  8      "header": "Elastic network interface trunking<a name=\"container-instance-eni\"></a>"

aws-doc-extractor • build/doc_source/create-blue-green.md:
  6      ],
  7:     "content": "**Note**  \nSupport for performing a blue/green deployment has been added for AWS CloudFormation\\. For more information, see [Perform Amazon ECS blue/green deployments through CodeDeploy using AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html) in the *AWS CloudFormation User Guide*\\.",
  8      "header": "Tutorial: Creating a service using a blue/green deployment<a name=\"create-blue-green\"></a>"

aws-doc-extractor • build/doc_source/create-container-image.md:
   6      ],
   7:     "content": "**Note**  \nIn some cases, you may need to reboot your instance to provide permissions for the `ec2-user` to access the Docker daemon\\. Try rebooting your instance if you see the following error:",
   8      "header": "Installing Docker on Amazon Linux 2<a name=\"create-container-image-install-docker\"></a>"

  14      ],
  15:     "content": "**Note**  \nOutput from the Apache web server is displayed in the terminal window\\. You can ignore the \"`Could not reliably determine the server's fully qualified domain name`\" message\\.",
  16      "header": "Create a Docker image<a name=\"create-container-image-create-image\"></a>"

aws-doc-extractor • build/doc_source/create-service-review.md:
  6      ],
  7:     "content": "**Note**  \nAfter you create a service, the load balancer configuration can't be changed from the AWS Management Console\\. You can use the AWS Copilot, AWS CloudFormation, AWS CLI or SDK to modify the load balancer configuration for the `ECS` rolling deployment controller only, not AWS CodeDeploy blue/green or external\\. When you add, update, or remove a load balancer configuration, Amazon ECS starts a new deployment with the updated Elastic Load Balancing configuration\\. This causes tasks to register to and deregister from load balancers\\. We recommend that you verify this on a test environment before you update the Elastic Load Balancing configuration\\. For information about how to modify the configuration, see [UpdateService](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html) in the *Amazon Elastic Container Service API Reference*\\.",
  8      "header": "Step 6: Review and create your service<a name=\"create-service-review\"></a>"

aws-doc-extractor • build/doc_source/create-service.md:
  6      ],
  7:     "content": "**Note**  \nWhen using a load balancer with services that are hosted on Amazon EC2 instances, verify that your instances can receive traffic from your load balancers\\. You can allow traffic to all ports on your instances from your load balancer's security group\\. This ensures that traffic can reach any containers that use dynamically assigned ports\\.",
  8      "header": "Creating an Amazon ECS service in the classic console<a name=\"create-service\"></a>"

aws-doc-extractor • build/doc_source/create-standard-load-balancer.md:
  6      ],
  7:     "content": "**Note**  \nThe following procedure configures an HTTP \\(port 80\\) load balancer, but you can modify these values for your application\\.",
  8      "header": "Configure health checks for your Amazon EC2 instances<a name=\"configure-health-check\"></a>"

aws-doc-extractor • build/doc_source/CWE_IAM_role.md:
  6      ],
  7:     "content": "**Note**  \nSpecify the full ARN of your task execution role or task role override\\.",
  8      "header": "Amazon ECS CloudWatch Events IAM Role<a name=\"CWE_IAM_role\"></a>"

aws-doc-extractor • build/doc_source/deep-learning-containers.md:
  6      ],
  7:     "content": "**Note**  \nStarting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference \\(EI\\), and will help current customers migrate their workloads to options that offer better price and performance\\. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2\\. However, customers who have used Amazon EI at least once during the past 30\\-day period are considered current customers and will be able to continue using the service\\.",
  8      "header": "Deep Learning Containers with Elastic Inference on Amazon ECS<a name=\"dlc-elastic-inference\"></a>"

aws-doc-extractor • build/doc_source/delete-service.md:
  6      ],
  7:     "content": "**Note**  \nIf no service discovery service is returned, continue to step 4\\.",
  8      "header": "[ AWS CLI ]"

aws-doc-extractor • build/doc_source/deployment-circuit-breaker.md:
  6      ],
  7:     "content": "**Note**  \nYou cannot change either of the threshold values\\.",
  8      "header": "Failure threshold<a name=\"failure-threshold\"></a>"

aws-doc-extractor • build/doc_source/deployment-type-bluegreen.md:
  6      ],
  7:     "content": "**Note**  \nIn addition to the standard Amazon ECS permissions required to run tasks and services, users also require `iam:PassRole` permissions to use IAM roles for tasks\\.",
  8      "header": "Blue/green deployment required IAM permissions<a name=\"deployment-type-bluegreen-IAM\"></a>"

aws-doc-extractor • build/doc_source/deregister-task-definition-v2.md:
  6      ],
  7:     "content": "**Note**  \nWhen you deregister all revisions in a task family, the task definition family is moved to the `INACTIVE` list\\. Adding a new revision of an `INACTIVE` task definition moves the task definition family back to the `ACTIVE` list\\.  \nAt this time, `INACTIVE` task definition revisions remain discoverable in your account indefinitely\\. However, this behavior is subject to change in the future\\. Therefore, you should not rely on `INACTIVE` task definition revisions persisting beyond the lifecycle of any associated tasks and services\\.",
  8      "header": "Deregistering a task definition revision using the console<a name=\"deregister-task-definition-v2\"></a>"

aws-doc-extractor • build/doc_source/deregister-task-definition.md:
  6      ],
  7:     "content": "**Note**  \nYou can’t deregister a task definition family at one time\\. You can only deregister individual revisions or multiple revisions within the family\\. When you deregister all revisions, the task definition family is moved to the `INACTIVE` list\\. Adding a new revision of an `INACTIVE` task definition moves the task definition family back to the `ACTIVE` list\\.  \nAt this time, `INACTIVE` task definition revisions remain discoverable in your account indefinitely\\. However, this behavior is subject to change in the future\\. Therefore, don't rely on `INACTIVE` task definition revisions persisting beyond the lifecycle of any associated tasks and services\\.",
  8      "header": "Deregistering a task definition revision<a name=\"deregister-task-definition\"></a>"

aws-doc-extractor • build/doc_source/docker-diags.md:
  6      ],
  7:     "content": "**Note**  \nDocker logs are only available on the container instance if you are using the default `json` log driver\\. If you have configured your tasks to use the `awslogs` log driver, then your container logs are available in CloudWatch Logs\\. For more information, see [Using the awslogs log driver](using_awslogs.md)\\.",
  8      "header": "View Docker Logs<a name=\"docker-logs\"></a>"

aws-doc-extractor • build/doc_source/ECS_agent.md:
  6      ],
  7:     "content": "**Note**  \nFor tasks using the Fargate launch type and platform version 1\\.3\\.0 and prior, the Amazon ECS container agent is installed on the AWS managed infrastructure used for these tasks\\. If you are only using tasks with the Fargate launch type, no additional configuration is needed and the content in this topic does not apply\\. For tasks using the Fargate and platform version 1\\.4\\.0 and later \\(for Linux \\) or 1\\.0\\.0 or later \\(for Windows\\), the Fargate container agent is used\\. For more information, see [AWS Fargate platform versions](https://docs.aws.amazon.com/AmazonECS/latest/userguide/platform_versions.html) in the *Amazon Elastic Container Service User Guide for AWS Fargate*\\.",
  8      "header": "Amazon ECS container agent<a name=\"ECS_agent\"></a>"

aws-doc-extractor • build/doc_source/ECS_AWSCLI_EC2.md:
  6      ],
  7:     "content": "**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\.",
  8      "header": "Step 1: Create a Cluster<a name=\"AWSCLI_EC2_create_cluster\"></a>"

aws-doc-extractor • build/doc_source/ECS_AWSCLI_Fargate_windows.md:
  6      ],
  7:     "content": "**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\.",
  8      "header": "Step 1: Create a Cluster<a name=\"ECS_AWSCLI_Fargate_windows_create_cluster\"></a>"

aws-doc-extractor • build/doc_source/ECS_AWSCLI_Fargate.md:
  6      ],
  7:     "content": "**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\.",
  8      "header": "Step 1: Create a Cluster<a name=\"ECS_AWSCLI_Fargate_create_cluster\"></a>"

aws-doc-extractor • build/doc_source/ECS_CLI.md:
   6      ],
   7:     "content": "**Note**  \nIf you encounter permission issues, ensure that you have administrator access on Windows and you are running PowerShell as an administrator\\.",
   8      "header": "[ Windows ]"

  14      ],
  15:     "content": "**Note**  \nAfter the `PATH` variable is set, the Amazon ECS CLI can be used from either Windows PowerShell or the command prompt\\.",
  16      "header": "[ Windows ]"

aws-doc-extractor • build/doc_source/ecs_cwe_events.md:
  6      ],
  7:     "content": "**Note**  \nAmazon ECS may add other event types, sources, and details in the future\\. If you are deserializing event JSON data in code, make sure that your application is prepared to handle unknown properties to avoid issues if and when these additional properties are added\\.",
  8      "header": "Amazon ECS events<a name=\"ecs_cwe_events\"></a>"

aws-doc-extractor • build/doc_source/ecs_cwet.md:
  6      ],
  7:     "content": "**Note**  \nWhen you use the AWS Management Console to create an event rule, the console automatically adds the IAM permissions necessary to grant CloudWatch Events permission to call your Lambda function\\. If you are creating an event rule using the AWS CLI, you need to grant this permission explicitly\\. For more information, see [Events and Event Patterns](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html) in the *Amazon CloudWatch Events User Guide*\\.",
  8      "header": "Step 2: Register an event rule<a name=\"cwet_step_3\"></a>"

aws-doc-extractor • build/doc_source/ECS_instances.md:
  6      ],
  7:     "content": "**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\.",
  8      "header": "Amazon ECS container instances<a name=\"ECS_instances\"></a>"

aws-doc-extractor • build/doc_source/ECS_Windows_getting_started.md:
  6      ],
  7:     "content": "**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\.",
  8      "header": "Step 4: View your service<a name=\"view_windows_service\"></a>"

aws-doc-extractor • build/doc_source/ecs-account-settings.md:
   6      ],
   7:     "content": "**Note**  \nFederated users assume the account setting of the root user and can't have explicit account settings set for them separately\\.",
   8      "header": "Account settings<a name=\"ecs-account-settings\"></a>"

  14      ],
  15:     "content": "**Note**  \nA resource ID doesn't change after it's created\\. Therefore, opting in or out of the new format doesn't affect your existing resource IDs\\.",
  16      "header": "Amazon Resource Names \\(ARNs\\) and IDs<a name=\"ecs-resource-ids\"></a>"

aws-doc-extractor • build/doc_source/ecs-agent-config.md:
  6      ],
  7:     "content": "**Note**  \nFor a full list of available Amazon ECS agent configuration variables, see [Amazon ECS Container Agent](https://github.com/aws/amazon-ecs-agent/blob/master/README.md) on GitHub\\.",
  8      "header": "Storing container instance configuration in Amazon S3<a name=\"ecs-config-s3\"></a>"

aws-doc-extractor • build/doc_source/ecs-agent-install.md:
   6      ],
   7:     "content": "**Note**  \nThe `systemd` units for both Amazon ECS and Docker services have a directive to wait for `cloud-init` to finish before starting both services\\. The `cloud-init` process is not considered finished until your Amazon EC2 user data has finished running\\. Therefore, starting Amazon ECS or Docker via Amazon EC2 user data may cause a deadlock\\. To start the container agent using Amazon EC2 user data you can use `systemctl enable --now --no-block ecs.service`\\.",
   8      "header": "Installing the Amazon ECS container agent<a name=\"ecs-agent-install\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf you get no response, ensure that you associated the Amazon ECS container instance IAM role when launching the instance\\. For more information, see [Amazon ECS container instance IAM role](instance_IAM_role.md)\\.",
  16      "header": "Installing the Amazon ECS container agent on an Amazon Linux 2 EC2 instance<a name=\"ecs-agent-install-al2\"></a>"

  22      ],
  23:     "content": "**Note**  \nWhen using a non\\-Amazon Linux AMI, your Amazon EC2 instance requires `cgroupfs` support for the `cgroup` driver in order for the Amazon ECS agent to support task level resource limits\\. For more information, see [Amazon ECS agent on GitHub](https://github.com/aws/amazon-ecs-agent)\\.",
  24      "header": "Installing the Amazon ECS container agent on a non\\-Amazon Linux EC2 instance<a name=\"ecs-agent-install-nonamazonlinux\"></a>"

aws-doc-extractor • build/doc_source/ecs-agent-introspection.md:
  6      ],
  7:     "content": "**Note**  \nAmazon ECS container agents before version 1\\.14\\.2 require full Docker container IDs for the introspection API, not the short version that is shown with docker ps\\. You can get the full Docker ID for a container by running the docker ps \\-\\-no\\-trunc command on the container instance\\.",
  8      "header": "Amazon ECS container agent introspection<a name=\"ecs-agent-introspection\"></a>"

aws-doc-extractor • build/doc_source/ecs-agent-update.md:
   6      ],
   7:     "content": "**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.",
   8      "header": "Updating the Amazon ECS container agent<a name=\"ecs-agent-update\"></a>"

  14      ],
  15:     "content": "**Note**  \nThe introspection API added `Version` information in the version v1\\.0\\.0 of the Amazon ECS container agent\\. If `Version` is not present when querying the introspection API, or the introspection API is not present in your agent at all, then the version you are running is v0\\.0\\.3 or earlier\\. You should update your version\\.",
  16      "header": "[ Amazon ECS container agent introspection API  ]"

aws-doc-extractor • build/doc_source/ecs-agent-versions.md:
   6      ],
   7:     "content": "**Note**  \nAs new Amazon ECS\\-optimized Amazon Linux 2 AMIs and Amazon ECS agent versions are released, older versions are still available for launch in Amazon EC2\\. However, we encourage you to [update to the latest version](ecs-agent-update.md) of the Amazon ECS agent and to keep your container instance software up to date\\. If you request support for an older version of the Amazon ECS agent through AWS Support, you may be asked to move to the latest version as a part of the support process\\.",
   8      "header": "Amazon ECS\\-Optimized Amazon Linux 2 AMI container agent versions<a name=\"al2-optimized-ami-agent-versions\"></a>"

  14      ],
  15:     "content": "**Note**  \nAs new Amazon ECS\\-optimized Amazon Linux AMIs and Amazon ECS agent versions are released, older versions are still available for launch in Amazon EC2\\. However, we encourage you to [update to the latest version](ecs-agent-update.md) of the Amazon ECS agent and to keep your container instance software up\\-to\\-date\\. If you request support for an older version of the Amazon ECS agent through AWS Support, you may be asked to move to the latest version as a part of the support process\\.",
  16      "header": "Amazon ECS\\-Optimized Amazon Linux AMI container agent versions<a name=\"ecs-optimized-ami-agent-versions\"></a>"

aws-doc-extractor • build/doc_source/ecs-ami-storage-config.md:
   6      ],
   7:     "content": "**Note**  \nYou can increase these default volume sizes by changing the block device mapping settings for your instances when you launch them; however, you cannot specify a smaller volume size than the default\\. For more information, see [Block Device Mapping](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the *Amazon EC2 User Guide for Linux Instances*\\.",
   8      "header": "Version 2015\\.09\\.d and later<a name=\"ecs-AMI-LVM\"></a>"

  14      ],
  15:     "content": "**Note**  \nEarlier Amazon ECS\\-optimized Amazon Linux AMI versions \\(`2015.09.d` to `2016.03.a`\\) create a logical volume that uses 40% of the available storage in the volume group\\. When the logical volume becomes 60% full, the logical volume is increased in size by 20%\\.",
  16      "header": "Version 2015\\.09\\.d and later<a name=\"ecs-AMI-LVM\"></a>"

aws-doc-extractor • build/doc_source/ECS-AMI-windows-SubscribeTopic.md:
  6      ],
  7:     "content": "**Note**  \nYour user, or the role attached to your user must have the `sns::subscribe` IAM permission to subscribe to an Amazon SNS topic\\.",
  8      "header": "Subscribing to Amazon ECS\\-optimized AMI update notifications<a name=\"ECS-AMI-windows-SubscribeTopic\"></a>"

aws-doc-extractor • build/doc_source/ecs-anywhere-registration-classic-console.md:
  6      ],
  7:     "content": "**Note**  \nBefore registering your Linux external instance with the cluster, create the `/etc/ecs/ecs.config` file on your external instance and add any container agent configuration parameters that you want\\. You can't do this after registering the external instance to a cluster\\.",
  8      "header": "Registering an external instance to a cluster using the classic console<a name=\"ecs-anywhere-registration-classic-console\"></a>"

aws-doc-extractor • build/doc_source/ecs-anywhere-registration.md:
  6      ],
  7:     "content": "**Note**  \nBefore registering your Linux external instance with the cluster, create the `/etc/ecs/ecs.config` file on your external instance and add any container agent configuration parameters that you want\\. You can't do this after registering the external instance to a cluster\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\.",
  8      "header": "Registering an external instance to a cluster<a name=\"ecs-anywhere-registration\"></a>"

aws-doc-extractor • build/doc_source/ecs-anywhere-updates.md:
  6      ],
  7:     "content": "**Note**  \nYou can determine which operating system and system architecture that your external instance uses by using the following commands\\.",
  8      "header": "Updating the Amazon ECS agent on an external instance<a name=\"ecs-anywhere-updates-ecsagent\"></a>"

aws-doc-extractor • build/doc_source/ecs-container-agent-endpoint.md:
  6      ],
  7:     "content": "**Note**  \nYou can add support for this feature on Amazon EC2 instances using older versions of the Amazon ECS container agent by updating the agent to the latest version\\. For more information, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\.",
  8      "header": "Amazon ECS container agent endpoint<a name=\"ecs-container-agent-endpoint\"></a>"

aws-doc-extractor • build/doc_source/ecs-exec.md:
   6      ],
   7:     "content": "**Note**  \nThis configuration only handles the logging of the `execute-command` session\\. It doesn't affect logging of your application\\.",
   8      "header": "Turning on logging and auditing in your tasks and services<a name=\"ecs-exec-enabling-logging\"></a>"

  14      ],
  15:     "content": "**Note**  \nBecause the `execute-command` API action contains only task and cluster resources in a request, only cluster and task tags are evaluated\\.",
  16      "header": "Using IAM policies to limit access to ECS Exec<a name=\"ecs-exec-best-practices-limit-access-execute-command\"></a>"

aws-doc-extractor • build/doc_source/ecs-linux.md:
  6      ],
  7:     "content": "**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\.",
  8      "header": "Linux instances<a name=\"ecs-linux\"></a>"

aws-doc-extractor • build/doc_source/ecs-logs-collector.md:
  6      ],
  7:     "content": "**Note**  \nThe source code for the Amazon ECS logs collector is available on GitHub for both [Linux](https://github.com/awslabs/ecs-logs-collector) and [Windows](https://github.com/awslabs/aws-ecs-logs-collector-for-windows)\\. We encourage you to submit pull requests for changes that you would like to have included\\. However, Amazon Web Services doesn't currently support running modified copies of this software\\.",
  8      "header": "Amazon ECS logs collector<a name=\"ecs-logs-collector\"></a>"

aws-doc-extractor • build/doc_source/ecs-on-outposts.md:
   6      ],
   7:     "content": "**Note**  \nIn order to avoid delays caused by pulling container images from Amazon ECR in the Region, use image caches\\. To do this, each time a task is run, configure the Amazon ECS agent to default to using the cached image on the instance itself by setting `ECS_IMAGE_PULL_BEHAVIOR` to `prefer-cached`\\.",
   8      "header": "Creating an Amazon ECS Cluster on an AWS Outposts<a name=\"ecs-outposts-create\"></a>"

  14      ],
  15:     "content": "**Note**  \nThis command is also used when adding additional instances to the cluster\\. Any containers deployed in the cluster will be placed on that specific AWS Outposts\\.",
  16      "header": "Creating an Amazon ECS Cluster on an AWS Outposts<a name=\"ecs-outposts-create\"></a>"

aws-doc-extractor • build/doc_source/ecs-using-tags.md:
  6      ],
  7:     "content": "**Note**  \nIf you've turned on reporting, it can take up to 24 hours before the data for the current month is available for viewing\\.",
  8      "header": "Tagging your resources for billing<a name=\"tag-resources-for-billing\"></a>"

aws-doc-extractor • build/doc_source/ecs-vt1.md:
  6      ],
  7:     "content": "**Note**  \nFor instructions on how to run video transcoding workloads in containers other than Amazon ECS, see the [Xilinx documentation](https://xilinx.github.io/video-sdk/v1.5/container_setup.html#working-with-docker-vt1)\\.",
  8      "header": "Using video transcoding on Amazon ECS<a name=\"ecs-vt1\"></a>"

aws-doc-extractor • build/doc_source/ecs-windows-ami-versions.md:
  6      ],
  7:     "content": "**Note**  \nFor details on referencing the Systems Manager Parameter Store parameter in an AWS CloudFormation template, see [Using the latest recommended Amazon ECS\\-optimized AMI in an AWS CloudFormation template](retrieve-ecs-optimized_AMI.md#ecs-optimized-ami-parameter-examples-5)\\.",
  8      "header": "Windows Amazon ECS\\-optimized AMIs versions<a name=\"ecs-ami-versions-windows\"></a>"

aws-doc-extractor • build/doc_source/ecs-windows.md:
  6      ],
  7:     "content": "**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\.",
  8      "header": "Windows instances<a name=\"ecs-windows\"></a>"

aws-doc-extractor • build/doc_source/efs-volumes.md:
  6      ],
  7:     "content": "**Note**  \nWhen creating an EFS access point, specify a path on the file system to serve as the root directory\\. When referencing the EFS file system with an access point ID in your Amazon ECS task definition, the root directory must either be omitted or set to `/`, which enforces the path set on the EFS access point\\.",
  8      "header": "Using Amazon EFS access points<a name=\"efs-volume-accesspoints\"></a>"

aws-doc-extractor • build/doc_source/fargate-capacity-providers.md:
  6      ],
  7:     "content": "**Note**  \nWhen running standalone tasks using Fargate Spot it's important to note that the task might be interrupted before it can complete and exit\\. Therefore, it's important that you code your application to gracefully exit within two minutes when it receives a SIGTERM signal and can be resumed\\. For more information, see [Handling Fargate Spot termination notices](#fargate-capacity-providers-termination)\\.",
  8      "header": "To run a task using a Fargate capacity provider \\(AWS CLI\\)<a name=\"fargate-capacity-providers-run-task-cli\"></a>"

aws-doc-extractor • build/doc_source/fargate-task-storage.md:
  6      ],
  7:     "content": "**Note**  \nFargate reserves space on disk\\. It is only used by Fargate\\. You aren't billed for it\\. It isn't shown in these metrics\\. However, you can see this additional storage in other tools such as `df`\\.",
  8      "header": "Fargate tasks using Linux platform version 1\\.4\\.0 or later<a name=\"fargate-task-storage-pv14\"></a>"

aws-doc-extractor • build/doc_source/firelens-concatanate-multiline.md:
   6      ],
   7:     "content": "**Note**  \nYou must use the absolute path of the parser\\.",
   8      "header": "Example: Use a parser that you create<a name=\"customer-parser\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf your logs go to log files instead of the standard output, we recommend specifying the `multiline.parser` and `multiline.key_content` configuration parameters in the [Tail input plugin](https://docs.fluentbit.io/manual/pipeline/inputs/tail#multiline-support) instead of the Filter\\.",
  16      "header": "Example: Use a Fluent Bit built\\-in parser<a name=\"fluent-bit-parser\"></a>"

aws-doc-extractor • build/doc_source/firelens-example-taskdefs.md:
   6      ],
   7:     "content": "**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.",
   8      "header": "Forwarding logs to CloudWatch Logs<a name=\"firelens-example-cloudwatch\"></a>"

  14      ],
  15:     "content": "**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.",
  16      "header": "Forwarding logs to an Amazon Kinesis Data Firehose delivery stream<a name=\"firelens-example-firehose\"></a>"

  22      ],
  23:     "content": "**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.",
  24      "header": "Forwarding logs to an Amazon OpenSearch Service domain<a name=\"firelens-example-opensearch\"></a>"

  30      ],
  31:     "content": "**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.",
  32      "header": "Parsing container logs that are serialized JSON<a name=\"firelens-example-parsing\"></a>"

  38      ],
  39:     "content": "**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.",
  40      "header": "Forwarding to an external Fluentd or Fluent Bit<a name=\"firelens-example-forward\"></a>"

aws-doc-extractor • build/doc_source/firelens-taskdef.md:
   6      ],
   7:     "content": "**Note**  \nFireLens manages the `match` configuration\\. This configuration isn't specified in your task definition\\.",
   8      "header": "Creating a task definition that uses a FireLens configuration<a name=\"firelens-taskdef\"></a>"

  14      ],
  15:     "content": "**Note**  \nTasks hosted on AWS Fargate only support the `file` configuration file type\\.",
  16      "header": "Specifying a custom configuration file<a name=\"firelens-taskdef-customconfig\"></a>"

aws-doc-extractor • build/doc_source/firelens-using-fluentbit.md:
   6      ],
   7:     "content": "**Note**  \nUnauthenticated pulls are allowed, but have a lower rate limit than authenticated pulls\\. To authenticate using your AWS account before pulling, use the following command\\.",
   8      "header": "Linux<a name=\"firelens-image-ecrpublic-linux\"></a>"

  14      ],
  15:     "content": "**Note**  \nUnauthenticated pulls are allowed, but have a lower rate limit than authenticated pulls\\. To authenticate using your AWS account before pulling, use the following command\\.",
  16      "header": "Windows<a name=\"firelens-image-ecrpublic-windows\"></a>"

aws-doc-extractor • build/doc_source/get-set-up-for-amazon-ecs.md:
   6      ],
   7:     "content": "**Note**  \nThe Amazon ECS console first\\-run experience creates a VPC for your cluster, so if you intend to use the Amazon ECS console, you can skip to the next section\\.",
   8      "header": "Create a virtual private cloud<a name=\"create-a-vpc\"></a>"

  14      ],
  15:     "content": "**Note**  \nThe Amazon ECS classic console first run experience creates a security group for your instances and load balancer based on the task definition you use, so if you intend to use the Amazon ECS console, you can move ahead to the next section\\.",
  16      "header": "Create a security group<a name=\"create-a-base-security-group\"></a>"

aws-doc-extractor • build/doc_source/gs-app-mesh.md:
  6      ],
  7:     "content": "**Note**  \nThis feature is not available for Window containers on Fargate\\.",
  8      "header": "Use App Mesh with Amazon ECS<a name=\"gs-app-mesh\"></a>"

aws-doc-extractor • build/doc_source/introspection-diag.md:
  6      ],
  7:     "content": "**Note**  \nThe command below is piped through the python \\-mjson\\.tool for greater readability\\.",
  8      "header": "Agent introspection diagnostics<a name=\"introspection-diag\"></a>"

aws-doc-extractor • build/doc_source/linux-gmsa.md:
   6      ],
   7:     "content": "**Note**  \nThis feature is not supported on Fargate\\. For Linux on Fargate, you can follow the example [Using Windows Authentication with Linux Containers on Amazon ECS](http://aws.amazon.com/blogs/containers/using-windows-authentication-with-linux-containers-on-amazon-ecs/)\\.",
   8      "header": "Using gMSAs for Linux Containers<a name=\"linux-gmsa\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf you chose to use your own KMS key to encrypt your secret, then you must add the necessary permissions to this role and add this role to the AWS KMS key policy\\.",
  16      "header": "Setting up gMSA\\-capable Linux Containers on Amazon ECS<a name=\"linux-gmsa-setup\"></a>"

aws-doc-extractor • build/doc_source/logging-using-cloudtrail.md:
  6      ],
  7:     "content": "**Note**  \nThese examples have been formatted for improved readability\\. In a CloudTrail log file, all entries and events are concatenated into a single line\\. In addition, this example has been limited to a single Amazon ECS entry\\. In a real CloudTrail log file, you see entries and events from multiple AWS services\\.",
  8      "header": "Understanding Amazon ECS log file entries<a name=\"understanding-service-name-entries\"></a>"

aws-doc-extractor • build/doc_source/logs.md:
  6      ],
  7:     "content": "**Note**  \nIf you are not sure how to collect all of the logs on your container instances, you can use the Amazon ECS logs collector\\. For more information, see [Amazon ECS logs collector](ecs-logs-collector.md)\\.",
  8      "header": "Amazon ECS Log File Locations<a name=\"logs\"></a>"

aws-doc-extractor • build/doc_source/manually_update_agent.md:
  6      ],
  7:     "content": "**Note**  \nIf you receive an `Error response from daemon: Cannot start container` message, you can delete the failed container with the sudo docker rm ecs\\-agent command and try running the agent again\\.",
  8      "header": "Manually updating the Amazon ECS container agent \\(for non\\-Amazon ECS\\-Optimized AMIs\\)<a name=\"manually_update_agent\"></a>"

aws-doc-extractor • build/doc_source/platform-linux-fargate.md:
   6      ],
   7:     "content": "**Note**  \nPlatform version `1.2.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\.",
   8      "header": "1\\.2\\.0<a name=\"platform-version-1-2\"></a>"

  14      ],
  15:     "content": "**Note**  \nPlatform version `1.1.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\.",
  16      "header": "1\\.1\\.0<a name=\"platform-version-1-1\"></a>"

  22      ],
  23:     "content": "**Note**  \nPlatform version `1.0.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\.",
  24      "header": "1\\.0\\.0<a name=\"platform-version-1-0\"></a>"

aws-doc-extractor • build/doc_source/private-auth.md:
   6      ],
   7:     "content": "**Note**  \nWhen using the Amazon ECS API, AWS CLI, or AWS SDK, if the secret exists in the same AWS Region as the task that you're launching then you can use either the full ARN or name of the secret\\. If the secret exists in a different account, the full ARN of the secret must be specified\\. When using the AWS Management Console, the full ARN of the secret must be specified always\\.",
   8      "header": "Private registry authentication for tasks<a name=\"private-auth\"></a>"

  14      ],
  15:     "content": "**Note**  \nAnother method of enabling private registry authentication uses Amazon ECS container agent environment variables to authenticate to private registries\\. This method is only supported for tasks hosted on Amazon EC2 instances\\. For more information, see [Private registry authentication for container instances](private-auth-container-instances.md)\\.",
  16      "header": "Private registry authentication for tasks<a name=\"private-auth\"></a>"

aws-doc-extractor • build/doc_source/retrieve-ecs-optimized_AMI.md:
   6      ],
   7:     "content": "**Note**  \nYour administrative user must have the following IAM permissions to retrieve the Amazon ECS\\-optimized AMI metadata\\. These permissions have been added to the `AmazonECS_FullAccess` IAM policy\\.  \nssm:GetParameters\nssm:GetParameter\nssm:GetParametersByPath",
   8      "header": "Retrieving Amazon ECS\\-Optimized AMI metadata<a name=\"retrieve-ecs-optimized_AMI\"></a>"

  14      ],
  15:     "content": "**Note**  \nAll versions of the Amazon ECS\\-optimized Amazon Linux 2 AMI are available for retrieval\\. Only Amazon ECS\\-optimized AMI versions `amzn-ami-2017.09.l-amazon-ecs-optimized` \\(Linux\\) and later can be retrieved\\. For more information, see [Amazon ECS\\-optimized AMI versions](ecs-ami-versions.md)\\.",
  16      "header": "Systems Manager Parameter Store parameter format<a name=\"ecs-optimized-ami-parameter-format\"></a>"

aws-doc-extractor • build/doc_source/retrieve-ecs-optimized_windows_AMI.md:
   6      ],
   7:     "content": "**Note**  \nYour administrative user must have the following IAM permissions to retrieve the Amazon ECS\\-optimized AMI metadata\\. These permissions have been added to the `AmazonECS_FullAccess` IAM policy\\.  \nssm:GetParameters\nssm:GetParameter\nssm:GetParametersByPath",
   8      "header": "Retrieving Amazon ECS\\-Optimized AMI metadata<a name=\"retrieve-ecs-optimized_windows_AMI\"></a>"

  14      ],
  15:     "content": "**Note**  \nAll versions of the Amazon ECS\\-optimized Amazon Linux 2 AMI are available for retrieval\\. Only Amazon ECS\\-optimized AMI versions `amzn-ami-2017.09.l-amazon-ecs-optimized` \\(Linux\\) and later can be retrieved\\. For more information, see [Amazon ECS\\-optimized AMI versions](ecs-ami-versions.md)\\.",
  16      "header": "Systems Manager Parameter Store parameter format<a name=\"ecs-optimized-ami-parameter-format\"></a>"

aws-doc-extractor • build/doc_source/scheduling_tasks.md:
  6      ],
  7:     "content": "**Note**  \nCustom schedulers are only compatible with tasks hosted on EC2 instances\\. If you use Amazon ECS on Fargate, the StartTask API doesn't work\\.",
  8      "header": "Scheduling Amazon ECS tasks<a name=\"scheduling_tasks\"></a>"

aws-doc-extractor • build/doc_source/security_iam_id-based-policy-examples.md:
  6      ],
  7:     "content": "**Note**  \nFor this example, when you call the `StartTask` API with the AWS CLI or another AWS SDK, you must specify the task definition revision so that the `Resource` mapping matches\\.",
  8      "header": "Start task example<a name=\"IAM_start_policies\"></a>"

aws-doc-extractor • build/doc_source/service-load-balancing.md:
  6      ],
  7:     "content": "**Note**  \nWhen you use tasks sets, all the tasks in the set must all be configured to use Elastic Load Balancing or to not use Elastic Load Balancing\\.",
  8      "header": "Service load balancing<a name=\"service-load-balancing\"></a>"

aws-doc-extractor • build/doc_source/service-quotas.md:
   6      ],
   7:     "content": "**Note**  \nThe default values are the initial quotas set by AWS, which are separate from the actual applied quota value and maximum possible service quota\\. For more information, see [Terminology in Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html#intro_getting-started) in the *Service Quotas User Guide*\\.",
   8      "header": "Amazon ECS service quotas<a name=\"service-quotas-ecs\"></a>"

  14      ],
  15:     "content": "**Note**  \n<a name=\"service-quotas-ecs-note-1\"></a>Services configured to use Amazon ECS service discovery have a limit of 1,000 tasks per service\\. This is due to the AWS Cloud Map service quota for the number of instances per service\\. For more information, see [AWS Cloud Map service quotas](https://docs.aws.amazon.com/general/latest/gr/cloud_map.html) in the *Amazon Web Services General Reference*\\.",
  16      "header": "Amazon ECS service quotas<a name=\"service-quotas-ecs\"></a>"

  22      ],
  23:     "content": "**Note**  \n<a name=\"service-quotas-ecs-note-2\"></a>In practice, task launch rates are also dependent on other considerations such as container images to be downloaded and unpacked, health checks and other integrations enabled, such as registering tasks with a load balancer\\. You might see variations in task launch rates compared with the quotas that are represented here\\. These variations are causes by the features that you have enabled for your Amazon ECS services\\. For more information, see [speeding up Amazon ECS deployments](https://docs.aws.amazon.com/AmazonECS/latest/bestpracticesguide/deployment.html) in the Amazon ECS Best Practices Guide\\.",
  24      "header": "Amazon ECS service quotas<a name=\"service-quotas-ecs\"></a>"

  30      ],
  31:     "content": "**Note**  \nServices configured to use Amazon ECS Service Connect have a limit of 1,000 tasks per service\\. This is due to the AWS Cloud Map service quota for the number of instances per service\\. For more information, see [AWS Cloud Map service quotas](https://docs.aws.amazon.com/general/latest/gr/cloud_map.html) in the *Amazon Web Services General Reference*\\.",
  32      "header": "Amazon ECS service quotas<a name=\"service-quotas-ecs\"></a>"

  38      ],
  39:     "content": "**Note**  \nThe default values are the initial quotas set by AWS, which are separate from the actual applied quota value and maximum possible service quota\\. For more information, see [Terminology in Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html#intro_getting-started) in the *Service Quotas User Guide*\\.",
  40      "header": "AWS Fargate service quotas<a name=\"service-quotas-fargate\"></a>"

  46      ],
  47:     "content": "**Note**  \nFargate additionally enforces Amazon ECS tasks and Amazon EKS pods launch rate limits\\. For more information, see [Fargate throttling limits](https://docs.aws.amazon.com/AmazonECS/latest/userguide/throttling.html)\\.",
  48      "header": "AWS Fargate service quotas<a name=\"service-quotas-fargate\"></a>"

  54      ],
  55:     "content": "**Note**  \nAmazon ECS doesn't support applied quotas\\.",
  56      "header": "[ AWS CLI ]"

aws-doc-extractor • build/doc_source/specifying-sensitive-data-tutorial.md:
  6      ],
  7:     "content": "**Note**  \nAlternatively, you can list all environment variables in your container using the `env` \\(or `printenv`\\) command\\.",
  8      "header": "Step 6: Verify<a name=\"specifying-sensitive-data-tutorial-verify\"></a>"

aws-doc-extractor • build/doc_source/task_definition_parameters.md:
   6      ],
   7:     "content": "**Note**  \nTask\\-level CPU and memory parameters are ignored for Windows containers\\. We recommend specifying container\\-level resources for Windows containers\\.",
   8      "header": "Task size<a name=\"task_size\"></a>"

  14      ],
  15:     "content": "**Note**  \nStarting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference \\(EI\\), and will help current customers migrate their workloads to options that offer better price and performance\\. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2\\. However, customers who have used Amazon EI at least once during the past 30\\-day period are considered current customers and will be able to continue using the service\\.",
  16      "header": "Elastic Inference accelerator name<a name=\"elastic-Inference-accelerator\"></a>"

  22      ],
  23:     "content": "**Note**  \nThis parameter is not supported for Windows containers or tasks using the Fargate launch type\\.",
  24      "header": "IPC mode<a name=\"task_definition_ipcmode\"></a>"

  30      ],
  31:     "content": "**Note**  \nThis parameter is not supported for Windows containers or tasks using the Fargate launch type\\.",
  32      "header": "PID mode<a name=\"task_definition_pidmode\"></a>"

aws-doc-extractor • build/doc_source/task_execution_IAM_role.md:
  6      ],
  7:     "content": "**Note**  \nThe task execution role is supported by Amazon ECS container agent version 1\\.16\\.0 and later\\.",
  8      "header": "Amazon ECS task execution IAM role<a name=\"task_execution_IAM_role\"></a>"

aws-doc-extractor • build/doc_source/task-cpu-memory-error.md:
   6      ],
   7:     "content": "**Note**  \nWhen using Terraform, the following error may be returned\\.",
   8      "header": "Invalid CPU or memory value specified<a name=\"task-cpu-memory-error\"></a>"

  14      ],
  15:     "content": "**Note**  \nTask\\-level CPU and memory parameters are ignored for Windows containers\\.",
  16      "header": "Invalid CPU or memory value specified<a name=\"task-cpu-memory-error\"></a>"

aws-doc-extractor • build/doc_source/task-iam-roles.md:
   6      ],
   7:     "content": "**Note**  \nWhen you specify an IAM role for a task, the AWS CLI or other SDKs in the containers for that task use the AWS credentials provided by the task role exclusively and they no longer inherit any IAM permissions from the Amazon EC2 or external instance they are running on\\.",
   8      "header": "Task IAM role<a name=\"task-iam-roles\"></a>"

  14      ],
  15:     "content": "**Note**  \nIn addition to the standard Amazon ECS permissions required to run tasks and services, users also require `iam:PassRole` permissions to use IAM roles for tasks\\.",
  16      "header": "Specifying an IAM role for your tasks<a name=\"specify-task-iam-roles\"></a>"

aws-doc-extractor • build/doc_source/task-metadata-endpoint-v4.md:
   6      ],
   7:     "content": "**Note**  \nAmazon ECS provides earlier versions of the task metadata endpoint\\. To avoid the need to create new task metadata endpoint versions in the future, additional metadata may be added to the version 4 output\\. We will not remove any existing metadata or change the metadata field names\\.",
   8      "header": "Task metadata endpoint version 4<a name=\"task-metadata-endpoint-v4\"></a>"

  14      ],
  15:     "content": "**Note**  \nYou can add support for this feature on Amazon EC2 instances using older versions of the Amazon ECS container agent by updating the agent to the latest version\\. For more information, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\.",
  16      "header": "Enabling the task metadata endpoint<a name=\"task-metadata-endpoint-v4-enable\"></a>"

aws-doc-extractor • build/doc_source/task-placement.md:
  6      ],
  7:     "content": "**Note**  \nTask placement strategies are a best effort\\. Amazon ECS still attempts to place tasks even when the most optimal placement option is unavailable\\. However, task placement constraints are binding, and they can prevent task placement\\.",
  8      "header": "Amazon ECS task placement<a name=\"task-placement\"></a>"

aws-doc-extractor • build/doc_source/tutorial-deploy-fluentbit-on-windows.md:
   6      ],
   7:     "content": "**Note**  \nThis task definition exposes Fluent Bit container port 24224 to the host port 24224\\. Verify that this port is not open in your EC2 instance security group to prevent access from outside\\.",
   8      "header": "Step 4: Register a Windows Fluent Bit task definition which routes the logs to CloudWatch<a name=\"tutorial-deploy-fluentbit-on-windows-register-task-definition\"></a>"

  14      ],
  15:     "content": "**Note**  \nThis task uses the `default` network mode\\. However, you can also use the `awsvpc` network mode with the task\\.",
  16      "header": "Step 6: Register a Windows task definition which generates the logs<a name=\"tutorial-deploy-fluentbit-on-windows-register-task-def-logs\"></a>"

aws-doc-extractor • build/doc_source/tutorial-ecs-web-server-cdk.md:
   6      ],
   7:     "content": "**Note**  \nThese instructions assume you are using AWS CDK v2\\.",
   8      "header": "Getting started with Amazon ECS using the AWS CDK<a name=\"tutorial-ecs-web-server-cdk\"></a>"

  14      ],
  15:     "content": "**Note**  \nThe AWS CDK application template uses the name of the project directory to generate names for source files and classes\\. In this example, the directory is named `hello-ecs`\\. If you use a different project directory name, your app won't match these instructions\\.",
  16      "header": "[ C\\# ]"

  22      ],
  23:     "content": "**Note**  \nA stack is a unit of deployment\\. All resources must be in a stack, and all the resources that are in a stack are deployed at the same time\\. If a resource fails to deploy, any other resources that were already deployed are rolled back\\. An AWS CDK app can contain multiple stacks, and resources in one stack can refer to resources in another stack\\.",
  24      "header": "Step 2: Use the AWS CDK to define a containerized web server on Fargate<a name=\"ecs-web-server-cdk-step-2\"></a>"

aws-doc-extractor • build/doc_source/tutorial-efs-volumes.md:
   6      ],
   7:     "content": "**Note**  \nAmazon EFS may not be available in all Regions\\. For more information about which Regions support Amazon EFS, see [Amazon Elastic File System Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/elasticfilesystem.html) in the *AWS General Reference*\\.",
   8      "header": "Tutorial: Using Amazon EFS file systems with Amazon ECS using the classic console<a name=\"tutorial-efs-volumes\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf you do not see the message, make sure that the security group for your container instance allows inbound network traffic on port 80\\.",
  16      "header": "Step 6: Run a task and view the results<a name=\"efs-run-task\"></a>"

aws-doc-extractor • build/doc_source/tutorial-wfsx-volumes.md:
   6      ],
   7:     "content": "**Note**  \nFSx for Windows File Server might not be available in all Regions\\. For more information about which Regions support FSx for Windows File Server, see [Amazon FSx Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/fsxn.html) in the *AWS General Reference*\\.",
   8      "header": "Tutorial: Using FSx for Windows File Server file systems with Amazon ECS<a name=\"tutorial-wfsx-volumes\"></a>"

  14      ],
  15:     "content": "**Note**  \nYou might not be able to connect to the website from within a VPN\\.",
  16      "header": "Step 8: Run a task and view the results<a name=\"wfsx-run-task\"></a>"

  22      ],
  23:     "content": "**Note**  \nIt takes 20 to 45 minutes to delete the FSx for Windows File Server file system or the AD\\. You must wait until the FSx for Windows File Server file system delete operations are complete before starting the AD delete operations\\.",
  24      "header": "Step 9: Clean up<a name=\"wfsx-cleanup\"></a>"

aws-doc-extractor • build/doc_source/usage-reports.md:
  6      ],
  7:     "content": "**Note**  \nAWS Cost Management calculates the *Split Cost Allocation Data* with the task CPU and memory usage\\. AWS Cost Management can use the task CPU and memory reservation instead of the usage, if the usage is unavailable\\. If you see the CUR is using the reservations, check that your container instances meet the prerequisites and the task resource usage metrics appear in CloudWatch\\.",
  8      "header": "Prerequisites for Task\\-level CURs<a name=\"task-cur-prereqs\"></a>"

aws-doc-extractor • build/doc_source/using_awslogs.md:
   6      ],
   7:     "content": "**Note**  \nThe type of information that is logged by the containers in your task depends mostly on their `ENTRYPOINT` command\\. By default, the logs that are captured show the command output that you typically might see in an interactive terminal if you ran the container locally, which are the `STDOUT` and `STDERR` I/O streams\\. The `awslogs` log driver simply passes these logs from Docker to CloudWatch Logs\\. For more information about how Docker logs are processed, including alternative ways to capture different file data or streams, see [View logs for a container or service](https://docs.docker.com/config/containers/logging/) in the Docker documentation\\.",
   8      "header": "Using the awslogs log driver<a name=\"using_awslogs\"></a>"

  14      ],
  15:     "content": "**Note**  \nIf you aren't using the Amazon ECS optimized AMI \\(with at least version 1\\.9\\.0\\-1 of the `ecs-init` package\\) for your container instances, you also need to specify that the `awslogs` logging driver is available on the container instance when you start the agent by using the following environment variable in your docker run statement or environment variable file\\. For more information, see [Installing the Amazon ECS container agent](ecs-agent-install.md)\\.",
  16      "header": "Turning on the awslogs log driver for your containers<a name=\"enable_awslogs\"></a>"

  22      ],
  23:     "content": "**Note**  \nTo use the `awslogs-create-group` option to have your log group created, your task execution IAM role policy or EC2 instance role policy must include the `logs:CreateLogGroup` permission\\.",
  24      "header": "Creating a log group<a name=\"create_awslogs_loggroups\"></a>"

aws-doc-extractor • build/doc_source/using_cloudwatch_logs.md:
  6      ],
  7:     "content": "**Note**  \nNew instance launches may take a few minutes to send data to CloudWatch Logs\\.",
  8      "header": "Viewing CloudWatch Logs<a name=\"viewing_cwlogs\"></a>"

aws-doc-extractor • build/doc_source/using-service-linked-roles.md:
  6      ],
  7:     "content": "**Note**  \nIf the Amazon ECS service is using the role when you try to delete the resources, then the deletion might fail\\. If that happens, wait for a few minutes and try the operation again\\.",
  8      "header": "Deleting a service\\-linked role for Amazon ECS<a name=\"delete-slr\"></a>"

aws-doc-extractor • build/doc_source/vpc-endpoints.md:
  6      ],
  7:     "content": "**Note**  \n*region* represents the Region identifier for an AWS Region supported by Amazon ECS, such as `us-east-2` for the US East \\(Ohio\\) Region\\.",
  8      "header": "Creating the VPC Endpoints for Amazon ECS<a name=\"ecs-setting-up-vpc-create\"></a>"

aws-doc-extractor • build/doc_source/wfsx-volumes.md:
  6      ],
  7:     "content": "**Note**  \nEC2 instances that use the Amazon ECS\\-Optimized Windows Server 2016 Full AMI do not support FSx for Windows File Server ECS task volumes\\.  \nYou cannot use FSx for Windows File Server volumes in a Windows containers on Fargate configuration\\.",
  8      "header": "FSx for Windows File Server volumes<a name=\"wfsx-volumes\"></a>"

aws-doc-extractor • build/doc_source/Windows_fargate-getting_started-classic-console.md:
  6      ],
  7:     "content": "**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\.",
  8      "header": "Step 4: View your service<a name=\"view_windows_fargate_service\"></a>"

aws-doc-extractor • build/doc_source/Windows_fargate-getting_started.md:
  6      ],
  7:     "content": "**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\.",
  8      "header": "Step 4: View your service<a name=\"view_windows_fargate_service\"></a>"

aws-doc-extractor • build/doc_source/windows_task_IAM_roles.md:
  6      ],
  7:     "content": "**Note**  \nYou do not need to run this script when you use `awsvpc` network mode on Windows\\.",
  8      "header": "IAM roles for task container bootstrap script<a name=\"windows_task_IAM_roles_bootstrap\"></a>"

aws-doc-extractor • build/doc_source/windows-gmsa.md:
  6      ],
  7:     "content": "**Note**  \nThis feature is not supported on Windows containers on Fargate\\.",
  8      "header": "Using gMSAs for Windows Containers<a name=\"windows-gmsa\"></a>"
