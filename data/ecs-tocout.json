{"contents":[{"title":"What is Amazon ECS?","href":"Welcome.html","contents":[{"title":"Amazon ECS features","href":"welcome-features.html"},{"title":"Common use cases","href":"common_use_cases.html"},{"title":"Related services","href":"welcome-related.html"},{"title":"New Amazon ECS console","href":"new-console.html"}]},{"title":"Getting started","href":"getting-started.html","contents":[{"title":"Set up","href":"get-set-up-for-amazon-ecs.html","notes":["**Note**  \nThe Amazon ECS console first\\-run experience creates a VPC for your cluster, so if you intend to use the Amazon ECS console, you can skip to the next section\\.","**Note**  \nThe Amazon ECS classic console first run experience creates a security group for your instances and load balancer based on the task definition you use, so if you intend to use the Amazon ECS console, you can move ahead to the next section\\."]},{"title":"Creating a container image","href":"create-container-image.html","notes":["**Note**  \nIn some cases, you may need to reboot your instance to provide permissions for the `ec2-user` to access the Docker daemon\\. Try rebooting your instance if you see the following error:","**Note**  \nOutput from the Apache web server is displayed in the terminal window\\. You can ignore the \"`Could not reliably determine the server's fully qualified domain name`\" message\\."]},{"title":"Using AWS Copilot","href":"getting-started-aws-copilot-cli.html"},{"title":"Using the AWS CDK","href":"tutorial-ecs-web-server-cdk.html","notes":["**Note**  \nThese instructions assume you are using AWS CDK v2\\.","**Note**  \nThe AWS CDK application template uses the name of the project directory to generate names for source files and classes\\. In this example, the directory is named `hello-ecs`\\. If you use a different project directory name, your app won't match these instructions\\.","**Note**  \nA stack is a unit of deployment\\. All resources must be in a stack, and all the resources that are in a stack are deployed at the same time\\. If a resource fails to deploy, any other resources that were already deployed are rolled back\\. An AWS CDK app can contain multiple stacks, and resources in one stack can refer to resources in another stack\\."]},{"title":"Using the console with Linux containers on AWS Fargate","href":"getting-started-fargate.html"},{"title":"Using the console with Windows containers on AWS Fargate","href":"Windows_fargate-getting_started.html","notes":["**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\."]},{"title":"Using the console with Amazon EC2","href":"getting-started-ecs-ec2-v2.html"}]},{"title":"Developer tools overview","href":"ecs-developer-tools.html","contents":[{"title":"Using the AWS Copilot CLI","href":"AWS_Copilot.html","notes":["**Note**  \nThe source code for the AWS Copilot CLI is available on [GitHub](https://github.com/aws/copilot-cli)\\. The latest CLI documentation is available on the AWS Copilot [website](https://aws.github.io/copilot-cli/)\\. We recommend that you submit issues and pull requests for changes that you would like to have included\\. However, Amazon Web Services doesn't currently support running modified copies of AWS Copilot code\\. Report issues with AWS Copilot by connecting with us on [Gitter](https://gitter.im/aws/copilot-cli) or [GitHub](https://github.com/aws/copilot-cli) where you can open issues, provide feedback, and report bugs\\."]},{"title":"Using the Amazon ECS CLI","href":"ECS_CLI.html","notes":["**Note**  \nIf you encounter permission issues, ensure that you have administrator access on Windows and you are running PowerShell as an administrator\\.","**Note**  \nAfter the `PATH` variable is set, the Amazon ECS CLI can be used from either Windows PowerShell or the command prompt\\."]}]},{"title":"AWS Fargate","href":"AWS_Fargate.html","contents":[{"title":"Platform Versions","href":"platform_versions.html","contents":[{"title":"Linux platform versions","href":"platform-linux-fargate.html","contents":[{"title":"Platform version deprecation","href":"platform-versions-retired.html"}],"notes":["**Note**  \nPlatform version `1.2.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\.","**Note**  \nPlatform version `1.1.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\.","**Note**  \nPlatform version `1.0.0` is no longer available\\. For information about platform version deprecation, see [AWS Fargate platform version deprecation](platform-versions-retired.md)\\."]},{"title":"Windows platform versions","href":"platform-windows-fargate.html"}]}]},{"title":"Clusters","href":"clusters.html","contents":[{"title":"Cluster management in the Amazon ECS console","href":"available-cluster-actions.html","contents":[{"title":"Creating a cluster for the Fargate launch type using the console","href":"create-cluster-console-v2.html"},{"title":"Creating a cluster for the Amazon EC2 launch type using the console","href":"create-ec2-cluster-console-v2.html"},{"title":"Updating a cluster using the console","href":"update-cluster-v2.html"},{"title":"Deleting a cluster using the console","href":"delete_cluster-new-console.html"}]},{"title":"Capacity providers","href":"cluster-capacity-providers.html","contents":[{"title":"AWS Fargate capacity providers","href":"fargate-capacity-providers.html","notes":["**Note**  \nWhen running standalone tasks using Fargate Spot it's important to note that the task might be interrupted before it can complete and exit\\. Therefore, it's important that you code your application to gracefully exit within two minutes when it receives a SIGTERM signal and can be resumed\\. For more information, see [Handling Fargate Spot termination notices](#fargate-capacity-providers-termination)\\."]},{"title":"Auto Scaling group capacity providers","href":"asg-capacity-providers.html","contents":[{"title":"Creating a capacity provider using the console","href":"create-capacity-provider-console-v2.html"},{"title":"Updating a capacity provider using the console","href":"update-capacity-provider-console-v2.html"},{"title":"Deleting a capacity provider using the console","href":"delete-capacity-provider-console-v2.html"}]}]},{"title":"Cluster auto scaling","href":"cluster-auto-scaling.html","contents":[{"title":"Turn on cluster auto scaling","href":"turn-on-cluster-auto-scaling.html"},{"title":"Turn off cluster auto scaling","href":"turn-off-cluster-auto-scaling.html"}],"notes":["**Note**  \nAmazon ECS cluster auto scaling is only supported with Auto Scaling group capacity providers\\. For Amazon ECS workloads that are hosted on AWS Fargate, see [AWS Fargate capacity providers](fargate-capacity-providers.md)\\."]},{"title":"Using Local Zones, Wavelength Zones, and AWS Outposts","href":"cluster-regions-zones.html"},{"title":"Cluster and capacity provider management using the AWS CLI","href":"cluster-management-cli.html"}]},{"title":"Task definitions","href":"task_definitions.html","contents":[{"title":"Task definition states","href":"task-definition-state.html"},{"title":"Amazon EC2 Windows task definition considerations","href":"windows_task_definitions.html"},{"title":"Application architecture","href":"application_architecture.html"},{"title":"Task definition management in the Amazon ECS console","href":"available-task-definition-actions.html","contents":[{"title":"Creating a task definition using the console","href":"create-task-definition.html"},{"title":"Updating a task definition using the console","href":"update-task-definition-console-v2.html"},{"title":"Deregistering a task definition revision using the console","href":"deregister-task-definition-v2.html","notes":["**Note**  \nWhen you deregister all revisions in a task family, the task definition family is moved to the `INACTIVE` list\\. Adding a new revision of an `INACTIVE` task definition moves the task definition family back to the `ACTIVE` list\\.  \nAt this time, `INACTIVE` task definition revisions remain discoverable in your account indefinitely\\. However, this behavior is subject to change in the future\\. Therefore, you should not rely on `INACTIVE` task definition revisions persisting beyond the lifecycle of any associated tasks and services\\."]},{"title":"Deleting a task definition revision using the console","href":"delete-task-definition-v2.html"}]},{"title":"Task definition template","href":"task-definition-template.html"},{"title":"Task definition parameters","href":"task_definition_parameters.html","notes":["**Note**  \nTask\\-level CPU and memory parameters are ignored for Windows containers\\. We recommend specifying container\\-level resources for Windows containers\\.","**Note**  \nStarting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference \\(EI\\), and will help current customers migrate their workloads to options that offer better price and performance\\. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2\\. However, customers who have used Amazon EI at least once during the past 30\\-day period are considered current customers and will be able to continue using the service\\.","**Note**  \nThis parameter is not supported for Windows containers or tasks using the Fargate launch type\\.","**Note**  \nThis parameter is not supported for Windows containers or tasks using the Fargate launch type\\."]},{"title":"Launch types","href":"launch_types.html"},{"title":"Working with GPUs on Amazon ECS","href":"ecs-gpu.html"},{"title":"Using video transcoding on Amazon ECS","href":"ecs-vt1.html","notes":["**Note**  \nFor instructions on how to run video transcoding workloads in containers other than Amazon ECS, see the [Xilinx documentation](https://xilinx.github.io/video-sdk/v1.5/container_setup.html#working-with-docker-vt1)\\."]},{"title":"Using machine learning on Amazon ECS","href":"ecs-machine-learning.html","contents":[{"title":"Using AWS Neuron on Amazon Linux 2 on Amazon ECS","href":"ecs-inference.html"},{"title":"Using deep learning DL1 instances on Amazon ECS","href":"ecs-dl1.html"}]},{"title":"Working with 64-bit ARM workloads on Amazon ECS","href":"ecs-arm64.html"},{"title":"Using data volumes in tasks","href":"using_data_volumes.html","contents":[{"title":"Fargate task storage","href":"fargate-task-storage.html","notes":["**Note**  \nFargate reserves space on disk\\. It is only used by Fargate\\. You aren't billed for it\\. It isn't shown in these metrics\\. However, you can see this additional storage in other tools such as `df`\\."]},{"title":"Amazon EFS volumes","href":"efs-volumes.html","notes":["**Note**  \nWhen creating an EFS access point, specify a path on the file system to serve as the root directory\\. When referencing the EFS file system with an access point ID in your Amazon ECS task definition, the root directory must either be omitted or set to `/`, which enforces the path set on the EFS access point\\."]},{"title":"FSx for Windows File Server volumes","href":"wfsx-volumes.html","notes":["**Note**  \nEC2 instances that use the Amazon ECS\\-Optimized Windows Server 2016 Full AMI do not support FSx for Windows File Server ECS task volumes\\.  \nYou cannot use FSx for Windows File Server volumes in a Windows containers on Fargate configuration\\."]},{"title":"Docker volumes","href":"docker-volumes.html"},{"title":"Bind mounts","href":"bind-mounts.html"}]},{"title":"Managing container swap space","href":"container-swap.html"},{"title":"Task networking","href":"task-networking.html","contents":[{"title":"AWSVPC mode","href":"task-networking-awsvpc.html"},{"title":"Host mode","href":"networking-networkmode-host.html"},{"title":"Bridge mode","href":"networking-networkmode-bridge.html"}]},{"title":"Using the awslogs log driver","href":"using_awslogs.html","notes":["**Note**  \nThe type of information that is logged by the containers in your task depends mostly on their `ENTRYPOINT` command\\. By default, the logs that are captured show the command output that you typically might see in an interactive terminal if you ran the container locally, which are the `STDOUT` and `STDERR` I/O streams\\. The `awslogs` log driver simply passes these logs from Docker to CloudWatch Logs\\. For more information about how Docker logs are processed, including alternative ways to capture different file data or streams, see [View logs for a container or service](https://docs.docker.com/config/containers/logging/) in the Docker documentation\\.","**Note**  \nIf you aren't using the Amazon ECS optimized AMI \\(with at least version 1\\.9\\.0\\-1 of the `ecs-init` package\\) for your container instances, you also need to specify that the `awslogs` logging driver is available on the container instance when you start the agent by using the following environment variable in your docker run statement or environment variable file\\. For more information, see [Installing the Amazon ECS container agent](ecs-agent-install.md)\\.","**Note**  \nTo use the `awslogs-create-group` option to have your log group created, your task execution IAM role policy or EC2 instance role policy must include the `logs:CreateLogGroup` permission\\."]},{"title":"Custom log routing","href":"using_firelens.html","contents":[{"title":"Using the AWS for Fluent Bit image","href":"firelens-using-fluentbit.html","notes":["**Note**  \nUnauthenticated pulls are allowed, but have a lower rate limit than authenticated pulls\\. To authenticate using your AWS account before pulling, use the following command\\.","**Note**  \nUnauthenticated pulls are allowed, but have a lower rate limit than authenticated pulls\\. To authenticate using your AWS account before pulling, use the following command\\."]},{"title":"Creating a task definition that uses a FireLens configuration","href":"firelens-taskdef.html","notes":["**Note**  \nFireLens manages the `match` configuration\\. This configuration isn't specified in your task definition\\.","**Note**  \nTasks hosted on AWS Fargate only support the `file` configuration file type\\."]},{"title":"Filtering logs using regular expressions","href":"firelens-filtering-logs.html"},{"title":"Concatenate multiline or stack-trace log messages","href":"firelens-concatanate-multiline.html","notes":["**Note**  \nYou must use the absolute path of the parser\\.","**Note**  \nIf your logs go to log files instead of the standard output, we recommend specifying the `multiline.parser` and `multiline.key_content` configuration parameters in the [Tail input plugin](https://docs.fluentbit.io/manual/pipeline/inputs/tail#multiline-support) instead of the Filter\\."]},{"title":"Example task definitions","href":"firelens-example-taskdefs.html","notes":["**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.","**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.","**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.","**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\.","**Note**  \nFor more examples, see [Amazon ECS FireLens examples](https://github.com/aws-samples/amazon-ecs-firelens-examples) on GitHub\\."]}]},{"title":"Private registry authentication for tasks","href":"private-auth.html","notes":["**Note**  \nWhen using the Amazon ECS API, AWS CLI, or AWS SDK, if the secret exists in the same AWS Region as the task that you're launching then you can use either the full ARN or name of the secret\\. If the secret exists in a different account, the full ARN of the secret must be specified\\. When using the AWS Management Console, the full ARN of the secret must be specified always\\.","**Note**  \nAnother method of enabling private registry authentication uses Amazon ECS container agent environment variables to authenticate to private registries\\. This method is only supported for tasks hosted on Amazon EC2 instances\\. For more information, see [Private registry authentication for container instances](private-auth-container-instances.md)\\."]},{"title":"Passing environment variables","href":"taskdef-envfiles.html"},{"title":"Passing sensitive data to a container","href":"specifying-sensitive-data.html","contents":[{"title":"Retrieving secrets through your application","href":"secrets-app.html","contents":[{"title":"Using Secrets Manager","href":"secrets-app-secrets-manager.html"},{"title":"Using AWS Systems Manager Parameter Store","href":"secrets-app-ssm-paramstore.html"}]},{"title":"Retrieving secrets through environment variables","href":"secrets-envvar.html","contents":[{"title":"Using Secrets Manager","href":"secrets-envvar-secrets-manager.html"},{"title":"Using AWS Systems Manager","href":"secrets-envvar-ssm-paramstore.html"}]},{"title":"Retrieve secrets for logging configuration","href":"secrets-logconfig.html"}]},{"title":"Example task definitions","href":"example_task_definitions.html"},{"title":"Task definition management using the AWS CLI","href":"task-def-management-cli.html"}]},{"title":"Account settings","href":"ecs-account-settings.html","contents":[{"title":"Viewing account settings using the console","href":"ecs-viewing-longer-id-settings.html"},{"title":"Modifying account settings","href":"ecs-modifying-longer-id-settings.html"},{"title":"Reverting to the default account settings","href":"ecs-reverting-account.html"},{"title":"Account setting management using the AWS CLI","href":"account-setting-management-cli.html"}],"notes":["**Note**  \nFederated users assume the account setting of the root user and can't have explicit account settings set for them separately\\.","**Note**  \nA resource ID doesn't change after it's created\\. Therefore, opting in or out of the new format doesn't affect your existing resource IDs\\."]},{"title":"Container instances","href":"ECS_instances.html","contents":[{"title":"Linux instances","href":"ecs-linux.html","contents":[{"title":"Amazon ECS-optimized AMI","href":"ecs-optimized_AMI.html","contents":[{"title":"Retrieving Amazon ECS-Optimized AMI metadata","href":"retrieve-ecs-optimized_AMI.html","notes":["**Note**  \nYour administrative user must have the following IAM permissions to retrieve the Amazon ECS\\-optimized AMI metadata\\. These permissions have been added to the `AmazonECS_FullAccess` IAM policy\\.  \nssm:GetParameters\nssm:GetParameter\nssm:GetParametersByPath","**Note**  \nAll versions of the Amazon ECS\\-optimized Amazon Linux 2 AMI are available for retrieval\\. Only Amazon ECS\\-optimized AMI versions `amzn-ami-2017.09.l-amazon-ecs-optimized` \\(Linux\\) and later can be retrieved\\. For more information, see [Amazon ECS\\-optimized AMI versions](ecs-ami-versions.md)\\."]},{"title":"AMI storage configuration","href":"ecs-ami-storage-config.html","notes":["**Note**  \nYou can increase these default volume sizes by changing the block device mapping settings for your instances when you launch them; however, you cannot specify a smaller volume size than the default\\. For more information, see [Block Device Mapping](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the *Amazon EC2 User Guide for Linux Instances*\\.","**Note**  \nEarlier Amazon ECS\\-optimized Amazon Linux AMI versions \\(`2015.09.d` to `2016.03.a`\\) create a logical volume that uses 40% of the available storage in the volume group\\. When the logical volume becomes 60% full, the logical volume is increased in size by 20%\\."]},{"title":"Amazon ECS-optimized Linux AMI build script","href":"ecs-ami-build-scripts.html"}]},{"title":"Bottlerocket","href":"ecs-bottlerocket.html"},{"title":"Launching a container instance","href":"launch_container_instance.html","contents":[{"title":"Using Spot Instances","href":"container-instance-spot.html"}]},{"title":"Bootstrap Container Instances","href":"bootstrap_container_instance.html"},{"title":"Starting a task at container instance launch time","href":"start_task_at_launch.html"},{"title":"Elastic network interface trunking","href":"container-instance-eni.html","notes":["**Note**  \nThis feature is not available on Fargate\\."]},{"title":"Memory Management","href":"memory-management.html"},{"title":"Manage container instances remotely","href":"ec2-run-command.html"}],"notes":["**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\."]},{"title":"Windows instances","href":"ecs-windows.html","contents":[{"title":"Amazon ECS-optimized AMI","href":"ecs-optimized_windows_AMI.html","contents":[{"title":"Retrieving Amazon ECS-Optimized AMI metadata","href":"retrieve-ecs-optimized_windows_AMI.html","notes":["**Note**  \nYour administrative user must have the following IAM permissions to retrieve the Amazon ECS\\-optimized AMI metadata\\. These permissions have been added to the `AmazonECS_FullAccess` IAM policy\\.  \nssm:GetParameters\nssm:GetParameter\nssm:GetParametersByPath","**Note**  \nAll versions of the Amazon ECS\\-optimized Amazon Linux 2 AMI are available for retrieval\\. Only Amazon ECS\\-optimized AMI versions `amzn-ami-2017.09.l-amazon-ecs-optimized` \\(Linux\\) and later can be retrieved\\. For more information, see [Amazon ECS\\-optimized AMI versions](ecs-ami-versions.md)\\."]},{"title":"Subscribing to Amazon ECS-optimized AMI update notifications","href":"ECS-AMI-windows-SubscribeTopic.html","notes":["**Note**  \nYour user, or the role attached to your user must have the `sns::subscribe` IAM permission to subscribe to an Amazon SNS topic\\."]},{"title":"AMI versions","href":"ecs-windows-ami-versions.html","notes":["**Note**  \nFor details on referencing the Systems Manager Parameter Store parameter in an AWS CloudFormation template, see [Using the latest recommended Amazon ECS\\-optimized AMI in an AWS CloudFormation template](retrieve-ecs-optimized_AMI.md#ecs-optimized-ami-parameter-examples-5)\\."]},{"title":"Building your own AMI","href":"windows-custom-ami.html"}]},{"title":"Launching a container instance","href":"launch_window-container_instance.html","contents":[{"title":"Using Spot Instances","href":"windows-container-instance-spot.html"}]},{"title":"Bootstrap Container Instances","href":"bootstrap_windows_container_instance.html","notes":["**Note**  \nThis script is shared for example purposes\\. It is much easier to get started with Windows containers by using the Amazon ECS\\-optimized Windows Server AMI\\. For more information, see [Creating a cluster using the classic console](create_cluster.md)\\."]},{"title":"Connect to your container Windows instance","href":"instance-windows-connect.html"},{"title":"Deregister a container instance","href":"deregister_container_instance.html"}],"notes":["**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\."]},{"title":"External instances","href":"ecs-anywhere.html","contents":[{"title":"IAM permissions","href":"ecs-anywhere-iam.html"},{"title":"Registering an external instance to a cluster","href":"ecs-anywhere-registration.html","notes":["**Note**  \nBefore registering your Linux external instance with the cluster, create the `/etc/ecs/ecs.config` file on your external instance and add any container agent configuration parameters that you want\\. You can't do this after registering the external instance to a cluster\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\."]},{"title":"Deregistering an external instance","href":"ecs-anywhere-deregistration.html"},{"title":"Running workloads on external instances","href":"ecs-anywhere-runtask.html"},{"title":"Updating the AWS Systems Manager Agent and Amazon ECS container agent","href":"ecs-anywhere-updates.html","notes":["**Note**  \nYou can determine which operating system and system architecture that your external instance uses by using the following commands\\."]}]},{"title":"Monitoring","href":"using_cloudwatch_logs.html","notes":["**Note**  \nNew instance launches may take a few minutes to send data to CloudWatch Logs\\."]},{"title":"Container instance draining","href":"container-instance-draining.html"}],"notes":["**Note**  \nTasks using the Fargate launch type are deployed onto infrastructure managed by AWS, so this topic does not apply\\."]},{"title":"Container agent","href":"ECS_agent.html","contents":[{"title":"Installing the Amazon ECS container agent","href":"ecs-agent-install.html","notes":["**Note**  \nThe `systemd` units for both Amazon ECS and Docker services have a directive to wait for `cloud-init` to finish before starting both services\\. The `cloud-init` process is not considered finished until your Amazon EC2 user data has finished running\\. Therefore, starting Amazon ECS or Docker via Amazon EC2 user data may cause a deadlock\\. To start the container agent using Amazon EC2 user data you can use `systemctl enable --now --no-block ecs.service`\\.","**Note**  \nIf you get no response, ensure that you associated the Amazon ECS container instance IAM role when launching the instance\\. For more information, see [Amazon ECS container instance IAM role](instance_IAM_role.md)\\.","**Note**  \nWhen using a non\\-Amazon Linux AMI, your Amazon EC2 instance requires `cgroupfs` support for the `cgroup` driver in order for the Amazon ECS agent to support task level resource limits\\. For more information, see [Amazon ECS agent on GitHub](https://github.com/aws/amazon-ecs-agent)\\."]},{"title":"Container agent versions","href":"ecs-agent-versions.html","notes":["**Note**  \nAs new Amazon ECS\\-optimized Amazon Linux 2 AMIs and Amazon ECS agent versions are released, older versions are still available for launch in Amazon EC2\\. However, we encourage you to [update to the latest version](ecs-agent-update.md) of the Amazon ECS agent and to keep your container instance software up to date\\. If you request support for an older version of the Amazon ECS agent through AWS Support, you may be asked to move to the latest version as a part of the support process\\.","**Note**  \nAs new Amazon ECS\\-optimized Amazon Linux AMIs and Amazon ECS agent versions are released, older versions are still available for launch in Amazon EC2\\. However, we encourage you to [update to the latest version](ecs-agent-update.md) of the Amazon ECS agent and to keep your container instance software up\\-to\\-date\\. If you request support for an older version of the Amazon ECS agent through AWS Support, you may be asked to move to the latest version as a part of the support process\\."]},{"title":"Amazon EC2 Windows containers","href":"ECS_Windows.html"},{"title":"Updating the Amazon ECS container agent","href":"ecs-agent-update.html","contents":[{"title":"Updating the Amazon ECS container agent on an Amazon ECS-optimized AMI","href":"agent-update-ecs-ami.html","notes":["**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.<a name=\"procedure_update_ecs-init\"></a>","**Note**  \nThe `ecs-init` package and the Amazon ECS container agent are updated immediately\\. However, newer versions of Docker are not loaded until the Docker daemon is restarted\\. Restart either by rebooting the instance, or by running the following commands on your instance:  \nAmazon ECS\\-optimized Amazon Linux 2 AMI:","**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\."]},{"title":"Manually updating the Amazon ECS container agent (for non-Amazon ECS-Optimized AMIs)","href":"manually_update_agent.html","notes":["**Note**  \nIf you receive an `Error response from daemon: Cannot start container` message, you can delete the failed container with the sudo docker rm ecs\\-agent command and try running the agent again\\."]}],"notes":["**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\.","**Note**  \nThe introspection API added `Version` information in the version v1\\.0\\.0 of the Amazon ECS container agent\\. If `Version` is not present when querying the introspection API, or the introspection API is not present in your agent at all, then the version you are running is v0\\.0\\.3 or earlier\\. You should update your version\\."]},{"title":"Container agent configuration","href":"ecs-agent-config.html","notes":["**Note**  \nFor a full list of available Amazon ECS agent configuration variables, see [Amazon ECS Container Agent](https://github.com/aws/amazon-ecs-agent/blob/master/README.md) on GitHub\\."]},{"title":"Private registry authentication for container instances","href":"private-auth-container-instances.html"},{"title":"Automated task and image cleanup","href":"automated_image_cleanup.html","notes":["**Note**  \nThe Amazon ECS agent image pull behavior can be customized using the `ECS_IMAGE_PULL_BEHAVIOR` parameter\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\.","**Note**  \nThe automated image cleanup feature requires at least version 1\\.13\\.0 of the Amazon ECS container agent\\. To update your agent to the latest version, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\."]},{"title":"Container metadata file","href":"container-metadata.html"},{"title":"Task metadata endpoint","href":"task-metadata-endpoint.html","contents":[{"title":"Task metadata endpoint version 4","href":"task-metadata-endpoint-v4.html","notes":["**Note**  \nAmazon ECS provides earlier versions of the task metadata endpoint\\. To avoid the need to create new task metadata endpoint versions in the future, additional metadata may be added to the version 4 output\\. We will not remove any existing metadata or change the metadata field names\\.","**Note**  \nYou can add support for this feature on Amazon EC2 instances using older versions of the Amazon ECS container agent by updating the agent to the latest version\\. For more information, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\."]},{"title":"Task Metadata Endpoint version 3","href":"task-metadata-endpoint-v3.html"},{"title":"Task Metadata Endpoint version 2","href":"task-metadata-endpoint-v2.html"}]},{"title":"Container agent endpoint","href":"ecs-container-agent-endpoint.html","contents":[{"title":"Task scale-in protection endpoint","href":"task-scale-in-protection-endpoint.html"}],"notes":["**Note**  \nYou can add support for this feature on Amazon EC2 instances using older versions of the Amazon ECS container agent by updating the agent to the latest version\\. For more information, see [Updating the Amazon ECS container agent](ecs-agent-update.md)\\."]},{"title":"Container agent introspection","href":"ecs-agent-introspection.html","notes":["**Note**  \nAmazon ECS container agents before version 1\\.14\\.2 require full Docker container IDs for the introspection API, not the short version that is shown with docker ps\\. You can get the full Docker ID for a container by running the docker ps \\-\\-no\\-trunc command on the container instance\\."]},{"title":"HTTP proxy configuration","href":"http_proxy_config.html"},{"title":"Using gMSAs for Windows Containers","href":"windows-gmsa.html","notes":["**Note**  \nThis feature is not supported on Windows containers on Fargate\\."]},{"title":"Using gMSAs for Linux Containers","href":"linux-gmsa.html","notes":["**Note**  \nThis feature is not supported on Fargate\\. For Linux on Fargate, you can follow the example [Using Windows Authentication with Linux Containers on Amazon ECS](http://aws.amazon.com/blogs/containers/using-windows-authentication-with-linux-containers-on-amazon-ecs/)\\.","**Note**  \nIf you chose to use your own KMS key to encrypt your secret, then you must add the necessary permissions to this role and add this role to the AWS KMS key policy\\."]},{"title":"Updating the Amazon ECS container agent with the console","href":"agent-update-console.html","notes":["**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\."]},{"title":"Container agent management using the AWS CLI","href":"agent-management-cli.html"}],"notes":["**Note**  \nFor tasks using the Fargate launch type and platform version 1\\.3\\.0 and prior, the Amazon ECS container agent is installed on the AWS managed infrastructure used for these tasks\\. If you are only using tasks with the Fargate launch type, no additional configuration is needed and the content in this topic does not apply\\. For tasks using the Fargate and platform version 1\\.4\\.0 and later \\(for Linux \\) or 1\\.0\\.0 or later \\(for Windows\\), the Fargate container agent is used\\. For more information, see [AWS Fargate platform versions](https://docs.aws.amazon.com/AmazonECS/latest/userguide/platform_versions.html) in the *Amazon Elastic Container Service User Guide for AWS Fargate*\\."]},{"title":"Scheduling tasks","href":"scheduling_tasks.html","contents":[{"title":"Running a standalone task using the Amazon ECS console","href":"ecs_run_task-v2.html"},{"title":"Stopping tasks using the new console","href":"stop-task-console-v2.html"},{"title":"Task placement","href":"task-placement.html","contents":[{"title":"Task groups","href":"task-groups.html"},{"title":"Task placement strategies","href":"task-placement-strategies.html"},{"title":"Task placement constraints","href":"task-placement-constraints.html"},{"title":"Cluster query language","href":"cluster-query-language.html","notes":["**Note**  \nA single expression can't contain parentheses\\. However, parentheses can be used to specify precedence in compound expressions\\."]}],"notes":["**Note**  \nTask placement strategies are a best effort\\. Amazon ECS still attempts to place tasks even when the most optimal placement option is unavailable\\. However, task placement constraints are binding, and they can prevent task placement\\."]},{"title":"Scheduled tasks","href":"scheduled_tasks.html"},{"title":"Task lifecycle","href":"task-lifecycle.html"},{"title":"Task maintenance","href":"task-maintenance.html"}],"notes":["**Note**  \nCustom schedulers are only compatible with tasks hosted on EC2 instances\\. If you use Amazon ECS on Fargate, the StartTask API doesn't work\\."]},{"title":"Services","href":"ecs_services.html","contents":[{"title":"Service definition parameters","href":"service_definition_parameters.html"},{"title":"Service management in the Amazon ECS console","href":"v2-service-actions.html","contents":[{"title":"Creating a service using the console","href":"create-service-console-v2.html"},{"title":"Updating a service using the console","href":"update-service-console-v2.html"},{"title":"Updating a blue/green deployment configuration using the console","href":"update-blue-green-deployment-v2.html"},{"title":"Deleting a service using the console","href":"delete-service-v2.html"}]},{"title":"Deployment types","href":"deployment-types.html","contents":[{"title":"Rolling update","href":"deployment-type-ecs.html","contents":[{"title":"Deployment circuit breaker","href":"deployment-circuit-breaker.html","notes":["**Note**  \nYou cannot change either of the threshold values\\."]},{"title":"CloudWatch alarms","href":"deployment-alarm-failure.html"}]},{"title":"Blue/Green deployment with CodeDeploy","href":"deployment-type-bluegreen.html","notes":["**Note**  \nIn addition to the standard Amazon ECS permissions required to run tasks and services, users also require `iam:PassRole` permissions to use IAM roles for tasks\\."]},{"title":"External deployment","href":"deployment-type-external.html"}]},{"title":"Service load balancing","href":"service-load-balancing.html","contents":[{"title":"Load balancer types","href":"load-balancer-types.html"},{"title":"Creating a load balancer","href":"create-load-balancer.html","contents":[{"title":"Creating an Application Load Balancer","href":"create-application-load-balancer.html"},{"title":"Creating a Network Load Balancer","href":"create-network-load-balancer.html"}]},{"title":"Registering multiple target groups with a service","href":"register-multiple-targetgroups.html"}],"notes":["**Note**  \nWhen you use tasks sets, all the tasks in the set must all be configured to use Elastic Load Balancing or to not use Elastic Load Balancing\\."]},{"title":"Service auto scaling","href":"service-auto-scaling.html","contents":[{"title":"Target tracking scaling policies","href":"service-autoscaling-targettracking.html"},{"title":"Step scaling policies","href":"service-autoscaling-stepscaling.html"}]},{"title":"Interconnecting services","href":"interconnecting-services.html","contents":[{"title":"Service Connect","href":"service-connect.html","contents":[{"title":"Tutorial: Using Service Connect in Fargate with the AWS CLI","href":"create-service-connect.html"}]},{"title":"Service discovery","href":"service-discovery.html"}]},{"title":"Task scale-in protection","href":"task-scale-in-protection.html"},{"title":"Service throttle logic","href":"service-throttle-logic.html"},{"title":"Service management using the AWS CLI","href":"service-management-cli.html"}]},{"title":"Resources and tags","href":"ecs-resource-tagging.html","contents":[{"title":"Tagging your resources","href":"ecs-using-tags.html","notes":["**Note**  \nIf you've turned on reporting, it can take up to 24 hours before the data for the current month is available for viewing\\."]},{"title":"Service quotas","href":"service-quotas.html","notes":["**Note**  \nThe default values are the initial quotas set by AWS, which are separate from the actual applied quota value and maximum possible service quota\\. For more information, see [Terminology in Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html#intro_getting-started) in the *Service Quotas User Guide*\\.","**Note**  \n<a name=\"service-quotas-ecs-note-1\"></a>Services configured to use Amazon ECS service discovery have a limit of 1,000 tasks per service\\. This is due to the AWS Cloud Map service quota for the number of instances per service\\. For more information, see [AWS Cloud Map service quotas](https://docs.aws.amazon.com/general/latest/gr/cloud_map.html) in the *Amazon Web Services General Reference*\\.","**Note**  \n<a name=\"service-quotas-ecs-note-2\"></a>In practice, task launch rates are also dependent on other considerations such as container images to be downloaded and unpacked, health checks and other integrations enabled, such as registering tasks with a load balancer\\. You might see variations in task launch rates compared with the quotas that are represented here\\. These variations are causes by the features that you have enabled for your Amazon ECS services\\. For more information, see [speeding up Amazon ECS deployments](https://docs.aws.amazon.com/AmazonECS/latest/bestpracticesguide/deployment.html) in the Amazon ECS Best Practices Guide\\.","**Note**  \nServices configured to use Amazon ECS Service Connect have a limit of 1,000 tasks per service\\. This is due to the AWS Cloud Map service quota for the number of instances per service\\. For more information, see [AWS Cloud Map service quotas](https://docs.aws.amazon.com/general/latest/gr/cloud_map.html) in the *Amazon Web Services General Reference*\\.","**Note**  \nThe default values are the initial quotas set by AWS, which are separate from the actual applied quota value and maximum possible service quota\\. For more information, see [Terminology in Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html#intro_getting-started) in the *Service Quotas User Guide*\\.","**Note**  \nFargate additionally enforces Amazon ECS tasks and Amazon EKS pods launch rate limits\\. For more information, see [Fargate throttling limits](https://docs.aws.amazon.com/AmazonECS/latest/userguide/throttling.html)\\.","**Note**  \nAmazon ECS doesn't support applied quotas\\."]},{"title":"AWS Fargate Regions","href":"AWS_Fargate-Regions.html"},{"title":"Usage Reports","href":"usage-reports.html","notes":["**Note**  \nAWS Cost Management calculates the *Split Cost Allocation Data* with the task CPU and memory usage\\. AWS Cost Management can use the task CPU and memory reservation instead of the usage, if the usage is unavailable\\. If you see the CUR is using the reservations, check that your container instances meet the prerequisites and the task resource usage metrics appear in CloudWatch\\."]}]},{"title":"Monitoring","href":"ecs_monitoring.html","contents":[{"title":"Monitoring tools","href":"monitoring-automated-manual.html"},{"title":"CloudWatch metrics","href":"cloudwatch-metrics.html","contents":[{"title":"Viewing Amazon ECS metrics","href":"viewing_cloudwatch_metrics.html"}],"notes":["**Note**  \nYou can disable CloudWatch metrics collection by setting `ECS_DISABLE_METRICS=true` in your Amazon ECS container agent configuration\\. For more information, see [Amazon ECS container agent configuration](ecs-agent-config.md)\\.","**Note**  \nIf you're using tasks with the EC2 launch type and have Linux container instances, the Amazon ECS container agent relies on Docker `stats` metrics to gather CPU and memory data for each container running on the instance\\. For burstable performance instances \\(T3, T3a, and T2 instances\\), the CPU utilization metric may reflect different data compared to instance\\-level CPU metrics\\.","**Note**  \nIn this example, the CPU utilization will only go above 100% when the CPU units are defined at the container level\\. If you define CPU units at the task level, the utilization will not go above the defined task\\-level limit\\."]},{"title":"Events and EventBridge","href":"cloudwatch_event_stream.html","contents":[{"title":"Amazon ECS events","href":"ecs_cwe_events.html","notes":["**Note**  \nAmazon ECS may add other event types, sources, and details in the future\\. If you are deserializing event JSON data in code, make sure that your application is prepared to handle unknown properties to avoid issues if and when these additional properties are added\\."]},{"title":"Handling events","href":"ecs_cwet_handling.html"}]},{"title":"CloudWatch Container Insights","href":"cloudwatch-container-insights.html","contents":[{"title":"Use CloudWatch Container Insights to view Amazon ECS lifecycle events","href":"lifecycle-metrics.html"}]},{"title":"Container instance health","href":"container-instance-health.html"},{"title":"Collecting application trace data","href":"trace-data.html"},{"title":"Collecting application metrics","href":"metrics-data.html","contents":[{"title":"Exporting application metrics to Amazon CloudWatch","href":"application-metrics-cloudwatch.html","notes":["**Note**  \nIf your application requires any additional permissions, you should add them to this policy\\. Each task definition may only specify one task IAM role\\. For example, if you are using a custom configuration file stored in Systems Manager, you should add the `ssm:GetParameters` permission to this IAM policy\\."]},{"title":"Exporting application metrics to Amazon Managed Service for Prometheus","href":"application-metrics-prometheus.html"}]},{"title":"Logging Amazon ECS API calls with AWS CloudTrail","href":"logging-using-cloudtrail.html","notes":["**Note**  \nThese examples have been formatted for improved readability\\. In a CloudTrail log file, all entries and events are concatenated into a single line\\. In addition, this example has been limited to a single Amazon ECS entry\\. In a real CloudTrail log file, you see entries and events from multiple AWS services\\."]},{"title":"Compute Optimizer recommendations","href":"ecs-recommendations.html"}]},{"title":"Security","href":"security.html","contents":[{"title":"Identity and Access Management","href":"security-iam.html","contents":[{"title":"How Amazon Elastic Container Service works with IAM","href":"security_iam_service-with-iam.html"},{"title":"Identity-based policy examples","href":"security_iam_id-based-policy-examples.html","notes":["**Note**  \nFor this example, when you call the `StartTask` API with the AWS CLI or another AWS SDK, you must specify the task definition revision so that the `Resource` mapping matches\\."]},{"title":"AWS managed policies for Amazon ECS","href":"security-iam-awsmanpol.html","contents":[{"title":"AWS managed policies that are phased out for Amazon ECS","href":"security-iam-awsmanpol-deprecated-policies.html"},{"title":"Migrating to AmazonECS_FullAccess","href":"security-iam-awsmanpol-amazonecs-full-access-migration.html"}]},{"title":"Using service-linked roles","href":"using-service-linked-roles.html","notes":["**Note**  \nIf the Amazon ECS service is using the role when you try to delete the resources, then the deletion might fail\\. If that happens, wait for a few minutes and try the operation again\\."]},{"title":"Task execution IAM role","href":"task_execution_IAM_role.html","notes":["**Note**  \nThe task execution role is supported by Amazon ECS container agent version 1\\.16\\.0 and later\\."]},{"title":"Task IAM role","href":"task-iam-roles.html","notes":["**Note**  \nWhen you specify an IAM role for a task, the AWS CLI or other SDKs in the containers for that task use the AWS credentials provided by the task role exclusively and they no longer inherit any IAM permissions from the Amazon EC2 or external instance they are running on\\.","**Note**  \nIn addition to the standard Amazon ECS permissions required to run tasks and services, users also require `iam:PassRole` permissions to use IAM roles for tasks\\."]},{"title":"Additional configuration for Windows task role","href":"windows_task_IAM_roles.html","notes":["**Note**  \nYou do not need to run this script when you use `awsvpc` network mode on Windows\\."]},{"title":"Container instance IAM role","href":"instance_IAM_role.html"},{"title":"ECS Anywhere IAM role","href":"iam-role-ecsanywhere.html"},{"title":"CodeDeploy IAM Role","href":"codedeploy_IAM_role.html","notes":["**Note**  \nUsers also require permissions to use CodeDeploy; these permissions are described in [Blue/green deployment required IAM permissions](deployment-type-bluegreen.md#deployment-type-bluegreen-IAM)\\."]},{"title":"CloudWatch Events IAM Role","href":"CWE_IAM_role.html","notes":["**Note**  \nSpecify the full ARN of your task execution role or task role override\\."]},{"title":"Tag resources during creation","href":"supported-iam-actions-tagging.html","contents":[{"title":"Control access to Amazon ECS resources using resource tags","href":"control-access-with-tags.html"},{"title":"Example policies","href":"iam-policies-ecs-console.html"}]},{"title":"Troubleshooting","href":"security_iam_troubleshoot.html"}]},{"title":"Logging and Monitoring","href":"ecs-logging-monitoring.html"},{"title":"Compliance validation","href":"ecs-compliance.html"},{"title":"AWS Fargate FIPS-140 compliance","href":"ecs-fips-compliance.html"},{"title":"Infrastructure Security","href":"infrastructure-security.html","contents":[{"title":"Interface VPC endpoints (AWS PrivateLink)","href":"vpc-endpoints.html","notes":["**Note**  \n*region* represents the Region identifier for an AWS Region supported by Amazon ECS, such as `us-east-2` for the US East \\(Ohio\\) Region\\."]}]}]},{"title":"Working with other services","href":"ecs-integrations.html","contents":[{"title":"Using Amazon ECR with Amazon ECS","href":"ecr-repositories.html"},{"title":"Creating Amazon ECS resources with AWS CloudFormation","href":"creating-resources-with-cloudformation.html"},{"title":"Amazon Elastic Container Service on AWS Outposts","href":"ecs-on-outposts.html","notes":["**Note**  \nIn order to avoid delays caused by pulling container images from Amazon ECR in the Region, use image caches\\. To do this, each time a task is run, configure the Amazon ECS agent to default to using the cached image on the instance itself by setting `ECS_IMAGE_PULL_BEHAVIOR` to `prefer-cached`\\.","**Note**  \nThis command is also used when adding additional instances to the cluster\\. Any containers deployed in the cluster will be placed on that specific AWS Outposts\\."]},{"title":"Use App Mesh with Amazon ECS","href":"gs-app-mesh.html","notes":["**Note**  \nThis feature is not available for Window containers on Fargate\\."]},{"title":"AWS Deep Learning Containers on Amazon ECS","href":"deep-learning-containers.html","notes":["**Note**  \nStarting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference \\(EI\\), and will help current customers migrate their workloads to options that offer better price and performance\\. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2\\. However, customers who have used Amazon EI at least once during the past 30\\-day period are considered current customers and will be able to continue using the service\\."]}]},{"title":"Tutorials","href":"ecs-tutorials.html","contents":[{"title":"Tutorial: Creating a VPC","href":"create-public-private-vpc.html"},{"title":"Tutorial: Creating a cluster with a Fargate Linux task using the AWS CLI","href":"ECS_AWSCLI_Fargate.html","notes":["**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\."]},{"title":"Tutorial: Creating a cluster with a Fargate Windows task using the AWS CLI","href":"ECS_AWSCLI_Fargate_windows.html","notes":["**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\."]},{"title":"Tutorial: Creating a cluster with an EC2 task using the AWS CLI","href":"ECS_AWSCLI_EC2.html","notes":["**Note**  \nThe benefit of using the `default` cluster that is provided for you is that you don't have to specify the `--cluster cluster_name` option in the subsequent commands\\. If you do create your own, non\\-default, cluster, you must specify `--cluster cluster_name` for each command that you intend to use with that cluster\\."]},{"title":"Tutorial: Using cluster auto scaling with the AWS Management Console and the Amazon ECS console","href":"tutorial-cluster-auto-scaling-console.html"},{"title":"Tutorial: Specifying Sensitive Data Using Secrets Manager Secrets","href":"specifying-sensitive-data-tutorial.html","notes":["**Note**  \nAlternatively, you can list all environment variables in your container using the `env` \\(or `printenv`\\) command\\."]},{"title":"Tutorial: Creating a service using Service Discovery","href":"create-service-discovery.html"},{"title":"Tutorial: Creating a service using a blue/green deployment","href":"create-blue-green.html","notes":["**Note**  \nSupport for performing a blue/green deployment has been added for AWS CloudFormation\\. For more information, see [Perform Amazon ECS blue/green deployments through CodeDeploy using AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html) in the *AWS CloudFormation User Guide*\\."]},{"title":"Tutorial: Listening for Amazon ECS CloudWatch Events","href":"ecs_cwet.html","notes":["**Note**  \nWhen you use the AWS Management Console to create an event rule, the console automatically adds the IAM permissions necessary to grant CloudWatch Events permission to call your Lambda function\\. If you are creating an event rule using the AWS CLI, you need to grant this permission explicitly\\. For more information, see [Events and Event Patterns](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html) in the *Amazon CloudWatch Events User Guide*\\."]},{"title":"Tutorial: Sending Amazon Simple Notification Service alerts for task stopped events","href":"ecs_cwet2.html"},{"title":"Tutorial: Using Amazon EFS","href":"tutorial-efs-volumes.html","notes":["**Note**  \nAmazon EFS may not be available in all Regions\\. For more information about which Regions support Amazon EFS, see [Amazon Elastic File System Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/elasticfilesystem.html) in the *AWS General Reference*\\.","**Note**  \nIf you do not see the message, make sure that the security group for your container instance allows inbound network traffic on port 80\\."]},{"title":"Tutorial: Using FSx for Windows File Server","href":"tutorial-wfsx-volumes.html","notes":["**Note**  \nFSx for Windows File Server might not be available in all Regions\\. For more information about which Regions support FSx for Windows File Server, see [Amazon FSx Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/fsxn.html) in the *AWS General Reference*\\.","**Note**  \nYou might not be able to connect to the website from within a VPN\\.","**Note**  \nIt takes 20 to 45 minutes to delete the FSx for Windows File Server file system or the AD\\. You must wait until the FSx for Windows File Server file system delete operations are complete before starting the AD delete operations\\."]},{"title":"Tutorial: Deploying Fluent Bit on Amazon ECS for Windows containers","href":"tutorial-deploy-fluentbit-on-windows.html","notes":["**Note**  \nThis task definition exposes Fluent Bit container port 24224 to the host port 24224\\. Verify that this port is not open in your EC2 instance security group to prevent access from outside\\.","**Note**  \nThis task uses the `default` network mode\\. However, you can also use the `awsvpc` network mode with the task\\."]}]},{"title":"Troubleshooting","href":"troubleshooting.html","contents":[{"title":"Using Amazon ECS Exec for debugging","href":"ecs-exec.html","notes":["**Note**  \nThis configuration only handles the logging of the `execute-command` session\\. It doesn't affect logging of your application\\.","**Note**  \nBecause the `execute-command` API action contains only task and cluster resources in a request, only cluster and task tags are evaluated\\."]},{"title":"Troubleshooting ECS Anywhere issues","href":"ecs-anywhere-troubleshooting.html"},{"title":"Checking stopped tasks for errors","href":"stopped-task-errors.html"},{"title":"CannotPullContainer task errors","href":"task_cannot_pull_image.html"},{"title":"Service event messages","href":"service-event-messages.html"},{"title":"Invalid CPU or memory value specified","href":"task-cpu-memory-error.html","notes":["**Note**  \nWhen using Terraform, the following error may be returned\\.","**Note**  \nTask\\-level CPU and memory parameters are ignored for Windows containers\\."]},{"title":"CannotCreateContainerError: API error (500): devmapper","href":"CannotCreateContainerError.html"},{"title":"Troubleshooting service load balancers","href":"troubleshoot-service-load-balancers.html"},{"title":"Troubleshooting service auto scaling","href":"troubleshoot-service-auto-scaling.html"},{"title":"Using Docker debug output","href":"docker-debug-mode.html"},{"title":"Amazon ECS Log File Locations","href":"logs.html","notes":["**Note**  \nIf you are not sure how to collect all of the logs on your container instances, you can use the Amazon ECS logs collector\\. For more information, see [Amazon ECS logs collector](ecs-logs-collector.md)\\."]},{"title":"Amazon ECS logs collector","href":"ecs-logs-collector.html","notes":["**Note**  \nThe source code for the Amazon ECS logs collector is available on GitHub for both [Linux](https://github.com/awslabs/ecs-logs-collector) and [Windows](https://github.com/awslabs/aws-ecs-logs-collector-for-windows)\\. We encourage you to submit pull requests for changes that you would like to have included\\. However, Amazon Web Services doesn't currently support running modified copies of this software\\."]},{"title":"Agent introspection diagnostics","href":"introspection-diag.html","notes":["**Note**  \nThe command below is piped through the python \\-mjson\\.tool for greater readability\\."]},{"title":"Docker diagnostics","href":"docker-diags.html","notes":["**Note**  \nDocker logs are only available on the container instance if you are using the default `json` log driver\\. If you have configured your tasks to use the `awslogs` log driver, then your container logs are available in CloudWatch Logs\\. For more information, see [Using the awslogs log driver](using_awslogs.md)\\."]},{"title":"AWS Fargate throttling quotas","href":"throttling.html"},{"title":"API failure reasons","href":"api_failures_messages.html","notes":["**Note**  \nBesides the failure scenarios described here, APIs can also fail due to exceptions, resulting in error responses\\. For a list of such exceptions, see [Common Errors](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/CommonErrors.html)\\."]},{"title":"Troubleshooting IAM Roles for Tasks","href":"troubleshoot-task-iam-roles.html"}]},{"title":"Classic Amazon Elastic Container Service console","href":"classic-console.html","contents":[{"title":"Getting started using the classic console","href":"getting-started-console.html","contents":[{"title":"Using the classic console with Linux containers on AWS Fargate","href":"getting-started-fargate-classic-console.html"},{"title":"Using the classic console with Windows containers on AWS Fargate","href":"Windows_fargate-getting_started-classic-console.html","notes":["**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\."]},{"title":"Using the classic console with Amazon EC2","href":"getting-started-ecs-ec2.html"},{"title":"Using the classic console with Windows containers","href":"ECS_Windows_getting_started.html","notes":["**Note**  \nIt can take up to 15 minutes for your container instance to download and extract the Windows container base layers\\."]}]},{"title":"Cluster management in the classic Amazon ECS console","href":"available-classic-console-cluster-actions.html","contents":[{"title":"Creating a cluster using the classic console","href":"create_cluster.html"},{"title":"Creating an Auto Scaling group capacity provider using the classic console","href":"asg-capacity-providers-create-capacity-provider.html"},{"title":"Updating an Auto Scaling group capacity provider using the classic console","href":"asg-capacity-providers-update-capacity-provider.html"},{"title":"Creating a cluster with an Auto Scaling group capacity provider","href":"asg-capacity-providers-create-cluster.html"},{"title":"Deleting an Auto Scaling group capacity provider using the classic console","href":"asg-capacity-providers-delete-capacity-provider.html","notes":["**Note**  \nOnly capacity providers that are currently associated with a cluster are visible in the AWS Management Console\\. To delete a capacity provider that is not associated with a cluster, you must use the Amazon ECS API, SDK, or AWS CLI\\."]},{"title":"Deleting a cluster using the classic console","href":"delete_cluster.html"}]},{"title":"Task definition management in the classic Amazon ECS console","href":"available-classic-console-task-definition-actions.html","contents":[{"title":"Creating a task definition using the classic console","href":"create-task-definition-classic.html"},{"title":"Updating a task definition using the classic console","href":"update-task-definition.html"},{"title":"Deregistering a task definition revision","href":"deregister-task-definition.html","notes":["**Note**  \nYou can’t deregister a task definition family at one time\\. You can only deregister individual revisions or multiple revisions within the family\\. When you deregister all revisions, the task definition family is moved to the `INACTIVE` list\\. Adding a new revision of an `INACTIVE` task definition moves the task definition family back to the `ACTIVE` list\\.  \nAt this time, `INACTIVE` task definition revisions remain discoverable in your account indefinitely\\. However, this behavior is subject to change in the future\\. Therefore, don't rely on `INACTIVE` task definition revisions persisting beyond the lifecycle of any associated tasks and services\\."]}]},{"title":"Task management in the classic Amazon ECS console","href":"available-classic-console-task-actions.html","contents":[{"title":"Run a standalone task in the classic Amazon ECS console","href":"ecs_run_task.html"}]},{"title":"Service Management","href":"available-classic-console-service-actions.html","contents":[{"title":"Creating a service","href":"create-service.html","contents":[{"title":"Creating a service using the classic Amazon ECS console","href":"create-service-console-v1.html","contents":[{"title":"Step 1: Configuring basic service parameters","href":"basic-service-params.html","notes":["**Note**  \nIf your cluster is configured with a default capacity provider strategy, you can only create a service using the default capacity provider strategy when using the console\\. Likewise, if no default capacity provider is defined, you can only use a launch type when creating a service using the console\\. It's not currently possible to have a mixed strategy using both capacity providers and launch types in the console\\."]},{"title":"Step 2: Configure a network","href":"service-configure-network.html"},{"title":"Step 3: Configuring your service to use a load balancer","href":"service-create-loadbalancer.html","contents":[{"title":"Configuring a load balancer for the rolling update deployment type","href":"service-create-loadbalancer-rolling.html"},{"title":"Configuring a load balancer for the blue/green deployment type","href":"service-create-loadbalancer-bluegreen.html"}]},{"title":"Step 4: Configuring your service to use Service Discovery","href":"service-configure-servicediscovery.html"},{"title":"Step 5: Configuring your service to use Service Auto Scaling","href":"service-configure-auto-scaling.html"},{"title":"Step 6: Review and create your service","href":"create-service-review.html","notes":["**Note**  \nAfter you create a service, the load balancer configuration can't be changed from the AWS Management Console\\. You can use the AWS Copilot, AWS CloudFormation, AWS CLI or SDK to modify the load balancer configuration for the `ECS` rolling deployment controller only, not AWS CodeDeploy blue/green or external\\. When you add, update, or remove a load balancer configuration, Amazon ECS starts a new deployment with the updated Elastic Load Balancing configuration\\. This causes tasks to register to and deregister from load balancers\\. We recommend that you verify this on a test environment before you update the Elastic Load Balancing configuration\\. For information about how to modify the configuration, see [UpdateService](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html) in the *Amazon Elastic Container Service API Reference*\\."]}]}],"notes":["**Note**  \nWhen using a load balancer with services that are hosted on Amazon EC2 instances, verify that your instances can receive traffic from your load balancers\\. You can allow traffic to all ports on your instances from your load balancer's security group\\. This ensures that traffic can reach any containers that use dynamically assigned ports\\."]},{"title":"Updating a service using the classic console","href":"update-service.html"},{"title":"Deleting a service using the classic console","href":"delete-service.html","notes":["**Note**  \nIf no service discovery service is returned, continue to step 4\\."]}]},{"title":"Tag Management","href":"available-classic-console-tag-actions.html","contents":[{"title":"Adding and deleting tags on an individual resource using the classic console","href":"adding-or-deleting-tags-classic.html"}]},{"title":"Account setting Management","href":"available-classic-console-account-actions.html","contents":[{"title":"Modifying account settings using the classic console","href":"ecs-modifying-longer-id-settings-classic.html"},{"title":"Viewing account settings using the classic console","href":"ecs-viewing-longer-id-settings-classic.html"}]},{"title":"Container instance management","href":"available-classic-console-instance-actions.html","contents":[{"title":"Connect to your container Windows instance using the classic console","href":"instance-windows-connect-classic-console.html"},{"title":"Deregister a container instance","href":"deregister_container_instance_classic_console.html"},{"title":"Registering an external instance to a cluster using the classic console","href":"ecs-anywhere-registration-classic-console.html","notes":["**Note**  \nBefore registering your Linux external instance with the cluster, create the `/etc/ecs/ecs.config` file on your external instance and add any container agent configuration parameters that you want\\. You can't do this after registering the external instance to a cluster\\."]},{"title":"Deregistering an external instance using the classic console","href":"ecs-anywhere-deregistration-classic-console.html"}]},{"title":"Container agent management","href":"available-classic-console-agent-actions.html","contents":[{"title":"Updating the Amazon ECS container agent with the classic console","href":"agent-update-classic-console.html","notes":["**Note**  \nAgent updates do not apply to Windows container instances\\. We recommend that you launch new container instances to update the agent version in your Windows clusters\\."]}]},{"title":"Montoring and troubleshooting","href":"available-classic-console-monitor-actions.html","contents":[{"title":"Viewing Cluster Metrics","href":"viewing_cluster_metrics_classic.html"},{"title":"Viewing Service Metrics","href":"viewing_service_metrics_classic.html"},{"title":"Checking stopped tasks for errors in the Amazon ECS classic console","href":"stopped-task-errors-classic-console.html"}]}]},{"title":"Document history","href":"document_history.html"},{"title":"AWS glossary","href":"glossary.html"}]}
